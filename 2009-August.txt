From stippi at mail.berlios.de  Tue Aug  4 10:52:11 2009
From: stippi at mail.berlios.de (stippi at BerliOS)
Date: Tue, 4 Aug 2009 10:52:11 +0200
Subject: [pe-commits] r590 - trunk/Sources
Message-ID: <200908040852.n748qBE5031897@sheep.berlios.de>

Author: stippi
Date: 2009-08-04 10:52:09 +0200 (Tue, 04 Aug 2009)
New Revision: 590
ViewCVS: http://svn.berlios.de/viewcvs/pe-editor?rev=590&view=rev

Modified:
   trunk/Sources/CDocIO.cpp
   trunk/Sources/PDoc.cpp
   trunk/Sources/PGroupWindow.cpp
   trunk/Sources/PProjectWindow.cpp
Log:
Fixed a bunch of GCC4 warnings. Some remain.


Modified: trunk/Sources/CDocIO.cpp
===================================================================
--- trunk/Sources/CDocIO.cpp	2009-07-25 20:58:49 UTC (rev 589)
+++ trunk/Sources/CDocIO.cpp	2009-08-04 08:52:09 UTC (rev 590)
@@ -649,7 +649,7 @@
 
 	const char *name;
 	if ((opcode == B_ENTRY_CREATED
-			|| opcode == B_ENTRY_MOVED && fNodeRef.node == -1)
+			|| (opcode == B_ENTRY_MOVED && fNodeRef.node == -1))
 		&& msg->FindString("name", &name) == B_OK
 		&& !strcmp(name, fEntryRef->name))
 	{

Modified: trunk/Sources/PDoc.cpp
===================================================================
--- trunk/Sources/PDoc.cpp	2009-07-25 20:58:49 UTC (rev 589)
+++ trunk/Sources/PDoc.cpp	2009-08-04 08:52:09 UTC (rev 590)
@@ -665,13 +665,13 @@
 			}
 
 			if ((back >= 0) && (front < end)) {
-				if ((text[back] == '"') && (text[front] != '"') ||
-					(text[back] != '"') && (text[front] == '"')) {
+				if (((text[back] == '"') && (text[front] != '"')) ||
+					((text[back] != '"') && (text[front] == '"'))) {
 					front = (frontSpace ? frontSpace : front);
 					back = (backSpace ? backSpace : back);
 				}
-				if ((text[back] == '<') && (text[front] != '>') ||
-					(text[back] != '<') && (text[front] == '>')) {
+				if (((text[back] == '<') && (text[front] != '>')) ||
+					((text[back] != '<') && (text[front] == '>'))) {
 					front = (frontSpace ? frontSpace : front);
 					back = (backSpace ? backSpace : back);
 				}

Modified: trunk/Sources/PGroupWindow.cpp
===================================================================
--- trunk/Sources/PGroupWindow.cpp	2009-07-25 20:58:49 UTC (rev 589)
+++ trunk/Sources/PGroupWindow.cpp	2009-08-04 08:52:09 UTC (rev 590)
@@ -1,8 +1,8 @@
 /*	$Id$
-	
+
 	Copyright 1996, 1997, 1998, 2002
 	        Hekkelman Programmatuur B.V.  All rights reserved.
-	
+
 	Redistribution and use in source and binary forms, with or without
 	modification, are permitted provided that the following conditions are met:
 	1. Redistributions of source code must retain the above copyright notice,
@@ -12,13 +12,13 @@
 	   and/or other materials provided with the distribution.
 	3. All advertising materials mentioning features or use of this software
 	   must display the following acknowledgement:
-	   
+
 	    This product includes software developed by Hekkelman Programmatuur B.V.
-	
+
 	4. The name of Hekkelman Programmatuur B.V. may not be used to endorse or
 	   promote products derived from this software without specific prior
 	   written permission.
-	
+
 	THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
 	INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
 	FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
@@ -28,7 +28,7 @@
 	OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 	WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 	OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
-	ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 	
+	ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
 
 #include "pe.h"
@@ -61,7 +61,7 @@
 public:
 		PIconFinder(PGroupWindow *w, vector<PEntryItem*> *items);
 		~PIconFinder();
-	
+
 virtual	long Execute();
 
 		PGroupWindow *fWindow;
@@ -83,7 +83,7 @@
 long PIconFinder::Execute()
 {
 	int i = 0;
-	
+
 	while (i < fItems->size() && !Cancelled())
 	{
 		try
@@ -91,7 +91,7 @@
 			PEntryItem *item = (*fItems)[i++];
 
 //			item->GetIcon();
-			
+
 			if (!Cancelled())
 			{
 				BAutolock lock(fWindow);
@@ -103,12 +103,12 @@
 			}
 		}
 		catch (HErr& e) {}
-		
+
 		snooze(10000);
 	}
-	
+
 	fWindow->PostMessage(msg_Done);
-	
+
 	return 0;
 } /* PIconFinder::Execute */
 
@@ -123,17 +123,17 @@
 	if (doc)
 	{
 		SetTitle(doc->name);
-		
+
 		BEntry e;
 		FailOSErr(e.SetTo(doc));
 		BPath p;
 		FailOSErr(e.GetPath(&p));
 		fStatus->SetPath(p.Path());
 		AddRecent(p.Path());
-		
+
 		Read();
 	}
-	
+
 	fList->AddFilter(new PKeyDownFilter());
 	fList->MakeFocus();
 	Show();
@@ -152,44 +152,44 @@
 {
 	inherited::SetupSizeAndLayout();
 	SetFlags(Flags()|B_WILL_ACCEPT_FIRST_CLICK);
-	
+
 	ResizeTo(180, 400);
 	SetSizeLimits(100, 100000, 100, 100000);
-	
+
 	BRect r(Bounds());
-	
+
 	BMenuBar *mbar;
 	AddChild(mbar = HResources::GetMenuBar(r, rid_Mbar_GroupWin));
 	mbar->FindItem(msg_Quit)->SetTarget(be_app);
 
 	r.bottom = r.top + kToolBarHeight;
 	r.OffsetBy(0, mbar->Bounds().bottom + 1);
-	
+
 	AddChild(fToolBar = new PToolBar(r, "toolbar"));
 
 	r.bottom -= 2;
 	r.OffsetTo(0, 0);
-	
+
 	fToolBar->AddChild(fButtonBar = new HButtonBar(r, "buttonbar", rid_Tbar_GroupWin, this));
-	
+
 	r = Bounds();
 	r.top = r.bottom - B_H_SCROLL_BAR_HEIGHT + 1;
 	r.right -= B_V_SCROLL_BAR_WIDTH;
-	AddChild(fStatus 
+	AddChild(fStatus
 		= new PGroupStatus(r, fDocIO->EntryRef() ? fDocIO->EntryRef()->name : NULL));
 
 	r = Bounds();
 	r.top = fToolBar->Frame().bottom;
-	
+
 	r.right -= B_V_SCROLL_BAR_WIDTH;
 	r.bottom -= B_H_SCROLL_BAR_HEIGHT;
 	fList = new PTypeAHeadList(r, "group", fStatus);
 	fList->SetInvocationMessage(new BMessage(msg_GroupItemInvoked));
-	
+
 	AddChild(new BScrollView("scroller", fList, B_FOLLOW_ALL_SIDES, 0, false, true, B_NO_BORDER));
-	
+
 	AddShortcut('S', 0, new BMessage(msg_Save));
-	
+
 } /* PGroupWindow::PGroupWindow */
 
 const char* PGroupWindow::DocWindowType()
@@ -222,21 +222,21 @@
 			case msg_GroupItemInvoked:
 				OpenItem();
 				break;
-			
+
 			case msg_Remove:
 			{
 				RemoveSelected();
 				break;
 			}
-			
+
 			case msg_Add:
 				AddFiles();
 				break;
-			
+
 			case B_REFS_RECEIVED:
 				AddRefs(msg);
 				break;
-			
+
 			case msg_Done:
 				fIconFinder = NULL;
 				if (fNewItems)
@@ -246,7 +246,7 @@
 					fIconFinder->Run();
 				}
 				break;
-			
+
 			default:
 				inherited::MessageReceived(msg);
 				break;
@@ -255,11 +255,11 @@
 
 void PGroupWindow::SetText(const BString& docText)
 {
-	try 
+	try
 	{
 		if (docText.Compare("### pe Group File\n", 18) != 0)
 			THROW(("Not a group file!"));
-		
+
 		if (!EntryRef())
 			THROW(("Can only read local groups"));
 
@@ -275,13 +275,13 @@
 			const char *se = strchr(s, '\n');
 			if (!se)
 				se = s+strlen(s);
-						
+
 			if (s[0] != ';' && s[0] != '#')
 			{
 				BString str(s, se-s);
 				PEntryItem *i;
 				entry_ref ref;
-			
+
 				try
 				{
 					FailOSErr(d.FindEntry(str.String(), &e, true));
@@ -299,12 +299,12 @@
 			if (*s != '\0')
 				s++;
 		}
-	
+
 		long l;
 		if (fIconFinder) wait_for_thread(fIconFinder->Thread(), &l);
 		fIconFinder = new PIconFinder(this, lst);
 		fIconFinder->Run();
-		
+
 		if (gPrefs->GetPrefInt(prf_I_SortGroup, 1))
 			fList->SortItems(PEntryItem::Compare);
 
@@ -313,7 +313,7 @@
 	catch (HErr& e)
 	{
 		e.DoError();
-	}	
+	}
 }
 
 void PGroupWindow::ReadAttr(BFile& file, BMessage& settingsMsg)
@@ -326,13 +326,13 @@
 		{
 			fm = (char *)malloc(ai.size);
 			FailNil(fm);
-			
+
 			FailIOErr(file.ReadAttr("pe-grp-info", ai.type, 0, fm, ai.size));
-			
+
 			FailOSErr(settingsMsg.Unflatten(fm));
 		}
 	}
-	catch (HErr& e) 
+	catch (HErr& e)
 	{
 		e.DoError();
 	}
@@ -348,7 +348,7 @@
 	for (int i = 0; i < fList->CountItems(); i++)
 	{
 		PEntryItem *item = (PEntryItem *)fList->ItemAt(i);
-		
+
 		if (gPrefs->GetPrefInt(prf_I_RelativeGroupPaths, 0))
 		{
 			char path[PATH_MAX];
@@ -374,7 +374,7 @@
 		FailOSErr(settingsMsg.Flatten(fm, s));
 		FailIOErr(file.WriteAttr("pe-grp-info", 'info', 0, fm, s));
 	}
-	catch (HErr& e) 
+	catch (HErr& e)
 	{
 		e.DoError();
 	}
@@ -403,7 +403,7 @@
 PEntryItem* PGroupWindow::AddRef(entry_ref& ref)
 {
 	PEntryItem *item;
-	
+
 	for (int i = 0; i < fList->CountItems(); i++)
 	{
 		item = static_cast<PEntryItem*>(fList->ItemAt(i));
@@ -416,7 +416,7 @@
 	fList->InvalidateItem(fList->CountItems() - 1);
 
 	SetDirty(true);
-	
+
 	return item;
 } /* PGroupWindow::AddRef */
 
@@ -427,7 +427,7 @@
 	else
 	{
 		entry_ref ref;
-		
+
 		if (EntryRef())
 		{
 			BEntry e, p;
@@ -435,7 +435,7 @@
 			FailOSErr(e.GetParent(&p));
 			FailOSErr(p.GetRef(&ref));
 		}
-		
+
 		fPanel = new BFilePanel(B_OPEN_PANEL, new BMessenger(this), &ref);
 		fPanel->SetButtonLabel(B_DEFAULT_BUTTON, "Add");
 		fPanel->Show();
@@ -446,10 +446,10 @@
 {
 	if (!fNewItems)
 		fNewItems = new vector<PEntryItem*>;
-	
+
 	entry_ref ref;
 	int c = 0;
-	
+
 	while (msg->FindRef("refs", c++, &ref) == B_OK)
 		fNewItems->push_back(AddRef(ref));
 
@@ -457,7 +457,7 @@
 		fList->SortItems(PEntryItem::Compare);
 
 	fList->Invalidate();
-	
+
 	if (fIconFinder == NULL)
 		PostMessage(msg_Done);
 } /* PGroupWindow::AddRefs */
@@ -471,7 +471,7 @@
 			delete fList->RemoveItem(s);
 	}
 	while (fList->IsItemSelected(s) ||
-		(s = fList->CurrentSelection(s)) > 0 && s < fList->CountItems());
+		((s = fList->CurrentSelection(s)) > 0 && s < fList->CountItems()));
 	SetDirty(true);
 }
 
@@ -487,9 +487,9 @@
 			FailOSErr(node.SetTo(&gi->Ref()));
 			BNodeInfo info;
 			FailOSErr(info.SetTo(&node));
-			
+
 			char mime[B_MIME_TYPE_LENGTH];
-			
+
 			if (info.GetType(mime) || strncmp(mime, "text/", 5))
 				OpenInTracker(gi->Ref());
 			else

Modified: trunk/Sources/PProjectWindow.cpp
===================================================================
--- trunk/Sources/PProjectWindow.cpp	2009-07-25 20:58:49 UTC (rev 589)
+++ trunk/Sources/PProjectWindow.cpp	2009-08-04 08:52:09 UTC (rev 590)
@@ -1,8 +1,8 @@
 /*	$Id$
-	
+
 	Copyright 1996, 1997, 1998, 2002
 	        Hekkelman Programmatuur B.V.  All rights reserved.
-	
+
 	Redistribution and use in source and binary forms, with or without
 	modification, are permitted provided that the following conditions are met:
 	1. Redistributions of source code must retain the above copyright notice,
@@ -12,13 +12,13 @@
 	   and/or other materials provided with the distribution.
 	3. All advertising materials mentioning features or use of this software
 	   must display the following acknowledgement:
-	   
+
 	    This product includes software developed by Hekkelman Programmatuur B.V.
-	
+
 	4. The name of Hekkelman Programmatuur B.V. may not be used to endorse or
 	   promote products derived from this software without specific prior
 	   written permission.
-	
+
 	THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
 	INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
 	FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
@@ -28,7 +28,7 @@
 	OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 	WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 	OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
-	ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 	
+	ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
 	Created: 11/18/98 21:24:03
 */
@@ -62,7 +62,7 @@
 
 const unsigned long msg_Done = 'done';
 
-PProjectWindow* 
+PProjectWindow*
 PProjectWindow::Create(const entry_ref *doc, const char* mimetype)
 {
 	PProjectWindow* pwin = new PProjectWindow(doc, mimetype);
@@ -90,7 +90,7 @@
 		delete fPanel;
 		fPanel = NULL;
 	}
-	
+
 } /* PProjectWindow::~PProjectWindow */
 
 void PProjectWindow::SetupSizeAndLayout()
@@ -98,7 +98,7 @@
 	inherited::SetupSizeAndLayout();
 	ResizeTo(180, 400);
 	SetSizeLimits(100, 100000, 100, 100000);
-	
+
 	BRect r(Bounds());
 
 	BMenuBar *mbar;
@@ -107,31 +107,31 @@
 
 	r.bottom = r.top + kToolBarHeight;
 	r.OffsetBy(0, mbar->Bounds().bottom + 1);
-	
+
 	AddChild(fToolBar = new PToolBar(r, "toolbar"));
 
 	r.bottom -= 2;
 	r.OffsetTo(0, 0);
-	
+
 	fToolBar->AddChild(fButtonBar = new HButtonBar(r, "buttonbar", rid_Tbar_ProjectWin, this));
-	
+
 	r = Bounds();
 	r.top = r.bottom - B_H_SCROLL_BAR_HEIGHT + 1;
 	r.right -= B_V_SCROLL_BAR_WIDTH;
-	AddChild(fStatus 
+	AddChild(fStatus
 		= new PGroupStatus(r, fDocIO->EntryRef() ? fDocIO->EntryRef()->name : NULL));
 
 	r = Bounds();
 	r.top = fToolBar->Frame().bottom;
-	
+
 	r.right -= B_V_SCROLL_BAR_WIDTH;
 	r.bottom -= B_H_SCROLL_BAR_HEIGHT;
 	fList = new PTypeAHeadList(r, "group", fStatus);
 	fList->SetInvocationMessage(new BMessage(msg_PProjectItemInvoked));
 	fList->SetSelectionMessage(new BMessage(msg_PProjectItemSelected));
-	
+
 	AddChild(new BScrollView("scroller", fList, B_FOLLOW_ALL_SIDES, 0, false, true, B_NO_BORDER));
-	
+
 	Read();
 
 	NameChanged();
@@ -157,27 +157,27 @@
 			case msg_PProjectItemSelected:
 				SelectionChanged();
 				break;
-			
+
 			case msg_PAdd:
 				AddFiles();
 				SetDirty(true);
 				break;
-			
+
 			case msg_PRemove:
 				RemoveSelected();
 				break;
-			
+
 			case B_REFS_RECEIVED:
 				AddRefs(msg);
 				break;
-			
+
 			case msg_EditAsText:
 				if (IsDirty())
 					Save();
 				gApp->NewWindow(EntryRef());
 				Close();
 				break;
-			
+
 			default:
 				inherited::MessageReceived(msg);
 				break;
@@ -189,7 +189,7 @@
 	fPrjFile = ProjectRoster->ParseProjectFile(EntryRef(), MimeType(), docText);
 	if (!fPrjFile || !fPrjFile->HaveProjectInfo())
 		return;
-	
+
 	try
 	{
 		fList->MakeEmpty();
@@ -203,10 +203,10 @@
 	catch (HErr& e)
 	{
 		e.DoError();
-	}	
+	}
 } /* PProjectWindow::ReadData */
 
-void PProjectWindow::AddItemsToList(CProjectItem* item, 
+void PProjectWindow::AddItemsToList(CProjectItem* item,
 												BListItem* parentListItem)
 {
 	if (!item)
@@ -216,7 +216,7 @@
 	BEntry e(path.Path());
 	entry_ref ref;
 	uint32 level
-		= parentListItem 
+		= parentListItem
 			? parentListItem->OutlineLevel() + 1
 			: 0;
 	if (e.Exists() && e.GetRef(&ref) == B_OK) {
@@ -250,9 +250,9 @@
 		{
 			fm = (char *)malloc(ai.size);
 			FailNil(fm);
-			
+
 			FailIOErr(file.ReadAttr("pe-prj-info", ai.type, 0, fm, ai.size));
-			
+
 			FailOSErr(settingsMsg.Unflatten(fm));
 		}
 	}
@@ -272,7 +272,7 @@
 	{
 		if (!fPrjFile)
 			THROW(("No project available"));
-		
+
 		fPrjFile->Save();
 		SetDirty(false);
 	}
@@ -295,7 +295,7 @@
 		FailIOErr(file.WriteAttr("pe-prj-info", 'info', 0, fm, s));
 	}
 	catch (HErr& e) {}
-	if (fm) 
+	if (fm)
 		free(fm);
 }
 
@@ -334,7 +334,7 @@
 void PProjectWindow::AddRef(const entry_ref& ref)
 {
 	PEntryItem *item;
-	
+
 	for (int i = 0; i < fList->FullListCountItems(); i++)
 	{
 		item = static_cast<PEntryItem*>(fList->FullListItemAt(i));
@@ -359,10 +359,10 @@
 		if (dynamic_cast<CProjectGroupItem*>(selectedItem->ModelItem()))
 			parentItem = selectedItem;
 		else
-			parentItem 
+			parentItem
 				= dynamic_cast<PProjectItem*>(fList->Superitem(selectedItem));
 		parentModelItem
-			= parentItem 
+			= parentItem
 				? dynamic_cast<CProjectGroupItem*>(parentItem->ModelItem())
 				: NULL;
 	}
@@ -376,8 +376,8 @@
 	item = new PEntryItem(ref, level, modelItem);
 
 	if (parentModelItem && parentItem) {
-		int32 pos 
-			= parentModelItem->AddItem(modelItem, 
+		int32 pos
+			= parentModelItem->AddItem(modelItem,
 												gPrefs->GetPrefInt(prf_I_SortProjectFiles, 1));
 		int32 parentIdx = fList->FullListIndexOf(parentItem);
 		fList->AddItem( item, parentIdx + pos + 1);
@@ -385,7 +385,7 @@
 		fPrjFile->AddItem(modelItem, false);
 		fList->AddItem(item);
 	}
-				
+
 	SetDirty(true);
 }
 
@@ -396,7 +396,7 @@
 	else
 	{
 		entry_ref ref;
-		
+
 		if (EntryRef())
 		{
 			BEntry e, p;
@@ -404,7 +404,7 @@
 			FailOSErr(e.GetParent(&p));
 			FailOSErr(p.GetRef(&ref));
 		}
-		
+
 		fPanel = new BFilePanel(B_OPEN_PANEL, new BMessenger(this), &ref);
 		fPanel->SetButtonLabel(B_DEFAULT_BUTTON, "Add");
 		fPanel->Show();
@@ -415,7 +415,7 @@
 {
 	entry_ref ref;
 	int c = 0;
-	
+
 	while (msg->FindRef("refs", c++, &ref) == B_OK)
 		AddRef(ref);
 
@@ -427,17 +427,17 @@
 	do
 	{
 		if (fList->IsItemSelected(s)) {
-			PProjectItem* projectItem 
+			PProjectItem* projectItem
 				= dynamic_cast<PProjectItem*>(fList->RemoveItem(s));
 			if (projectItem) {
-				CProjectGroupItem* projectGroupItem 
+				CProjectGroupItem* projectGroupItem
 					= dynamic_cast<CProjectGroupItem*>(projectItem->ModelItem());
 				if (projectGroupItem) {
-					BAlert* alert 
-						= new BAlert( "Pe Message", 
+					BAlert* alert
+						= new BAlert( "Pe Message",
 										  "You can't remove a group-item",
 										  "Ah, Ok", NULL, NULL,
-										  B_WIDTH_AS_USUAL, B_OFFSET_SPACING, 
+										  B_WIDTH_AS_USUAL, B_OFFSET_SPACING,
 										  B_WARNING_ALERT);
 					alert->SetShortcut( 0, B_ESCAPE);
 					alert->Go();
@@ -451,7 +451,7 @@
 		}
 	}
 	while (fList->IsItemSelected(s) ||
-		(s = fList->CurrentSelection(s)) > 0 && s < fList->CountItems());
+		((s = fList->CurrentSelection(s)) > 0 && s < fList->CountItems()));
 }
 
 void PProjectWindow::OpenItem()
@@ -466,17 +466,17 @@
 			FailOSErr(node.SetTo(&gi->Ref()));
 			BNodeInfo info;
 			FailOSErr(info.SetTo(&node));
-			
+
 			char mime[B_MIME_TYPE_LENGTH];
-			
-			CProjectFile* subProject 
+
+			CProjectFile* subProject
 				= dynamic_cast<CProjectFile*>(gi->ModelItem());
 			if (subProject) {
 				if (!subProject->HasBeenParsed()) {
 					subProject->Read();
 					if (subProject->HasBeenParsed()) {
 						list<CProjectItem*>::const_iterator iter;
-						for( iter = subProject->begin(); 
+						for( iter = subProject->begin();
 							  iter != subProject->end(); ++iter) {
 							AddItemsToList( *iter, gi);
 						}
@@ -512,8 +512,8 @@
 	int32 sel = fList->CurrentSelection(0);
 	BListItem* viewItem = (sel<0) ? NULL : fList->FullListItemAt(sel);
 	PProjectItem* prjViewItem = dynamic_cast<PProjectItem*>(viewItem);
-	CProjectItem* prjItem 
-		= prjViewItem 
+	CProjectItem* prjItem
+		= prjViewItem
 			? dynamic_cast<CProjectItem*>(prjViewItem->ModelItem())
 			: NULL;
 	bool addOk = prjItem ? prjItem->CanBeAddedTo() : false;



From zooey at mail.berlios.de  Sat Aug  8 12:04:19 2009
From: zooey at mail.berlios.de (zooey at BerliOS)
Date: Sat, 8 Aug 2009 12:04:19 +0200
Subject: [pe-commits] r591 - trunk/build
Message-ID: <200908081004.n78A4J0A008008@sheep.berlios.de>

Author: zooey
Date: 2009-08-08 12:04:13 +0200 (Sat, 08 Aug 2009)
New Revision: 591
ViewCVS: http://svn.berlios.de/viewcvs/pe-editor?rev=591&view=rev

Modified:
   trunk/build/MainBuildRules
Log:
* do not accept undefined symbols in Pe's shared libs, as otherwise
  we only notice them once the app (or add-on) is started



Modified: trunk/build/MainBuildRules
===================================================================
--- trunk/build/MainBuildRules	2009-08-04 08:52:09 UTC (rev 590)
+++ trunk/build/MainBuildRules	2009-08-08 10:04:13 UTC (rev 591)
@@ -64,7 +64,8 @@
 	MakeLocate $(lib) : $(LOCATE_MAIN_TARGET) ;
 	local linkFlags ;
 	if $(OSPLAT) = X86 {
-		linkFlags = -nostart -Xlinker -soname=\"$(lib)\" ;
+		linkFlags = -nostart -Xlinker -soname=\"$(lib)\" 
+			-Xlinker --no-undefined ;
 	} else {
 		linkFlags = -xms ;
 	}



From zooey at mail.berlios.de  Sat Aug  8 12:06:23 2009
From: zooey at mail.berlios.de (zooey at BerliOS)
Date: Sat, 8 Aug 2009 12:06:23 +0200
Subject: [pe-commits] r592 - trunk/Languages/Sources
Message-ID: <200908081006.n78A6NHR008315@sheep.berlios.de>

Author: zooey
Date: 2009-08-08 12:06:23 +0200 (Sat, 08 Aug 2009)
New Revision: 592
ViewCVS: http://svn.berlios.de/viewcvs/pe-editor?rev=592&view=rev

Modified:
   trunk/Languages/Sources/Diff_Language.cpp
Log:
applying patch by Scott (sorry it took so long):
* switch colors in diff language, such the original (supposedly erraneous)
  line is highlighted as an error and the new line as text


Modified: trunk/Languages/Sources/Diff_Language.cpp
===================================================================
--- trunk/Languages/Sources/Diff_Language.cpp	2009-08-08 10:04:13 UTC (rev 591)
+++ trunk/Languages/Sources/Diff_Language.cpp	2009-08-08 10:06:23 UTC (rev 592)
@@ -57,9 +57,9 @@
 	|| strncmp(proxy.Text(), "@@", 2) == 0) {
 		proxy.SetColor(0, kColorComment1);
 	} else if (*proxy.Text() == '-' || *proxy.Text() == '<') {
+		proxy.SetColor(0, kColorError1);
+	} else if (*proxy.Text() == '+' || *proxy.Text() == '>') {
 		proxy.SetColor(0, kColorString1);
-	} else if (*proxy.Text() == '+' || *proxy.Text() == '>') {
-		proxy.SetColor(0, kColorError1);
 	} else
 		proxy.SetColor(0, kColorText);
 }



