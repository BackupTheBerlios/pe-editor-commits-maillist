From mmu_man at mail.berlios.de  Wed Oct  8 16:48:53 2008
From: mmu_man at mail.berlios.de (mmu_man at BerliOS)
Date: Wed, 8 Oct 2008 16:48:53 +0200
Subject: [pe-commits] r538 - trunk/build
Message-ID: <200810081448.m98EmrR3019143@sheep.berlios.de>

Author: mmu_man
Date: 2008-10-08 16:48:53 +0200 (Wed, 08 Oct 2008)
New Revision: 538
ViewCVS: http://svn.berlios.de/viewcvs/pe-editor?rev=538&view=rev

Modified:
   trunk/build/MainBuildRules
Log:
Reinstate the beos fallback for bison, but fixed. Works for me.


Modified: trunk/build/MainBuildRules
===================================================================
--- trunk/build/MainBuildRules	2008-08-19 11:05:20 UTC (rev 537)
+++ trunk/build/MainBuildRules	2008-10-08 14:48:53 UTC (rev 538)
@@ -191,7 +191,7 @@
 actions BisonC++
 {
 	# TODO: this ignores $(YACCFLAGS)
-	$(BISON) --defines=$(1[1]).h -o $(1[1]) $(2)
+	$(BISON) --defines=$(1[1]).h -o $(1[1]) $(2) || $(BISON) $(YACCFLAGS) -o $(1[1]) $(2)
 }
 
 rule Rez



From superstippi at gmx.de  Wed Oct  8 17:04:38 2008
From: superstippi at gmx.de (Stephan Assmus)
Date: Wed, 08 Oct 2008 17:04:38 +0200
Subject: [pe-commits] r538 - trunk/build
In-Reply-To: <200810081448.m98EmrR3019143@sheep.berlios.de>
References: <200810081448.m98EmrR3019143@sheep.berlios.de>
Message-ID: <20081008170438.44833.11@stippis2.1223452165.fake>


mmu_man at BerliOS wrote:
> Author: mmu_man
> Date: 2008-10-08 16:48:53 +0200 (Wed, 08 Oct 2008) New Revision: 538
> ViewCVS: http://svn.berlios.de/viewcvs/pe-editor?rev=538&view=rev
> 
> Modified:
>    trunk/build/MainBuildRules
> Log:
> Reinstate the beos fallback for bison, but fixed. Works for me.

Thanks a lot! This fixed the build for me as well.

Best regards,
-Stephan


From stippi at mail.berlios.de  Wed Oct  8 17:09:54 2008
From: stippi at mail.berlios.de (stippi at mail.berlios.de)
Date: Wed, 8 Oct 2008 17:09:54 +0200
Subject: [pe-commits] r539 - trunk/Resources
Message-ID: <200810081509.m98F9s48022568@sheep.berlios.de>

Author: stippi
Date: 2008-10-08 17:09:50 +0200 (Wed, 08 Oct 2008)
New Revision: 539
ViewCVS: http://svn.berlios.de/viewcvs/pe-editor?rev=539&view=rev

Added:
   trunk/Resources/pe.types.rdef
Modified:
   trunk/Resources/pe.types.rsrc
Log:
* Add an RDef file that can be used to update the rsrc easier.
* Created vector icons for all supported types that Pe has icons for.
* Updated the .rsrc using Haiku's rc. AFAIKT, it looks good.

Can the Pe package be updated so that we get these icons in Haiku when
the optional Pe package is used?



Added: trunk/Resources/pe.types.rdef
===================================================================
--- trunk/Resources/pe.types.rdef	2008-10-08 14:48:53 UTC (rev 538)
+++ trunk/Resources/pe.types.rdef	2008-10-08 15:09:50 UTC (rev 539)
@@ -0,0 +1,643 @@
+
+resource app_flags B_SINGLE_LAUNCH;
+
+resource app_version {
+	major  = 2,
+	middle = 4,
+	minor  = 1,
+
+	variety = B_APPV_BETA,
+	internal = 0,
+
+	short_info = "Pe 2.4.1-rc1",
+	long_info = "Pe 2.4.1 Release Candidate 1"
+};
+
+resource app_signature "application/x-vnd.beunited.pe";
+
+resource file_types message {
+	"types" = "text/plain",
+	"types" = "text/x-source-code",
+	"types" = "text",
+	"types" = "text/x-vnd.Hekkel-Pe-Group",
+	"types" = "text/x-makefile",
+	"types" = "text/x-rez",
+	"types" = "text/x-jamfile"
+};
+
+resource vector_icon array {
+	$"6E6369660C05010200060338D2F73CD163BF82B23B84A94B88504910C900B6F5"
+	$"5CBDDCFFB3FFD7FFBA020106023E49240000000000003CAAAA4940004A8000FF"
+	$"CCFF897C4FB009040192020006023A55A6BAC2293F0DA33E958646C2EB4870EB"
+	$"00010101FF85CB5202000603B2F679BA14D43A7FB6B38E9E460F5547105A00FF"
+	$"EED58DDBAB5FCFFFEED5020006023D4D340000000000004000004A5000000000"
+	$"0080C2FAFFF8FBFF020006023C08200000000000004000004A4000000000FF3A"
+	$"A6D800287AB902000602B507E13A82E2BAD599B56BB44A7652479FE400022262"
+	$"FE046DA402000602AAB1FB3A081FBE8A26AF5E794C4014448D43FFFDDCAB00DB"
+	$"AB5F020006023B8E380000000000004000004A5400C10000002F500AFF7CB53F"
+	$"035A9E1E140606AE0BB40BC14B33C5ADB75DC371BDEFC805C13ECA02CA28BF80"
+	$"C118BB1EC51BBD3EBF07BA063AB8BA060CAEAABAB40BC14B33C5ADB75DC371BD"
+	$"EFC805C13ECA02C4E04F41C507374B394A45C33CC6D1C36FCA28BF80C118BB1E"
+	$"C51BBD3EBF07BA063AB8BA0605AE02B57D43B9B9C5EDB7BB49BBB756BD75CB34"
+	$"CA8EC3AF40340609AEAA02B57D43B9B9C5EDB7BB49BBB756BD75CB34C6F0C5C2"
+	$"4E4F514BC9BBC428CA8EC3AF40340A093B5E3D60BFCDCB3C4560C516C7EF604B"
+	$"5B485D4A44560A045A475E445A42574508022E45BDB53808023147BE34BE0108"
+	$"023449C0E5BD4F0606B20831245356295625562D532E3126290A063124B8BAB5"
+	$"B2B8BAB779312EB677B6ECB67CB63C0804BA28B4D33027302BBA28B8580A0433"
+	$"24B969B5BA4E2751240A04B969B5BAB969B7714E2B4E270A04B969B771332E51"
+	$"2E4E2B0003C6E8B4D3C6E8B4D3C690B517502950B59E50B78DC6E8B858C690B8"
+	$"14C6E8B8580604EE532456295625562D532E5029502D50250604EE5327552955"
+	$"28552A532B5229522A52280A06C4E04F41C507374B394A45C33CC6D1C36F0A04"
+	$"C6F0C5C24E4F514BC9BBC428110A03020405000A0001021001178400040A0201"
+	$"03000A0B0113000A0001001001178400040A010101000A040208061815FF0117"
+	$"8100040A0402080618001501178200040A0401071815FF01178100040A0A0112"
+	$"000A0003090B0F123ED413BED4133ED4133ED41347F4A24A588901178400040A"
+	$"05010A023ED413BED4133ED4133ED41347F4A24A58890A06010C023ED413BED4"
+	$"133ED4133ED41347F4A24A58890A07010D023ED413BED4133ED4133ED41347F4"
+	$"A24A58890A08010E023ED413BED4133ED4133ED41347F4A24A58890A09011002"
+	$"3ED413BED4133ED4133ED41347F4A24A58890A0001110A3ED413BED4133ED413"
+	$"3ED41347F4A24A588915FF"
+};
+
+resource large_icon array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0A0B0AFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0A8585850AFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0A24850C00850F"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0A24860B850C850F"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0A2486113F0885850F"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0A2486113FAC08080900"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0A2486113FAC08202000FF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFF0A2486113FAC08202000FFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFF003F3F0000FFFFFF0A2486113FAC08202000FFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFF003F3F3F3F4000000A2486113FAC08202000FFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFF003F3F403F403F400A2486113FAC08202000FFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF003F3F3F3F3F3F3F0A2486113FAC08202000FFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFF003F3F403F403F400A2486113FAC08202000FFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF003F3F3F3F3F3F3F900A86113FAC082020000000FFFFFFFFFFFF"
+	$"FFFFFFFFFF003F3F403F403F40B60A0B0A3FAC082020003F403F0000FFFFFFFF"
+	$"FFFFFFFF003F3F403F403F40B6400A640AAC082020003F403F403F400000FFFF"
+	$"FFFFFF003F3F403F403F4090403F0A640A000000003F403F403F403F404000FF"
+	$"FFFF003F3F413F413F40B7403F0A6485858585003F4191413F413F414100FFFF"
+	$"FF003F414141414141DE413F900A09858500004141B641414141414100B7B7FF"
+	$"000041414141414141414190410A090000B79090B69191919191910100B7B7B7"
+	$"FFB7000041414141414141410A0000B700B7B700B7B7B7B7B7B700B7B700B7B7"
+	$"FFFFB70000004242424242420000B700B7B700B7B7B7B7B7B700B7B7B70000B7"
+	$"FFFFFFB700900000424242424242424242B74242424242420090902900B7B7FF"
+	$"FFFFFFFFB700909000004343434343434343434343434300680000B7B7FFFFFF"
+	$"FFFFFFFFFFB700689090000044444444444444444444000000B7B7FFFFFFFFFF"
+	$"FFFFFFFFFFFFB700686890900000454545454545450000B7B7FFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFB700436868909000004545454500B7B7FFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFB70043436868909000004500B7B7FFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFB700434343430000B700B7B7FFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFB700430000B7B7B7B7B7FFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFB700B7B7FFFFFFB7FFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFB7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+};
+
+resource mini_icon array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFF0A0B0AFF"
+	$"FFFFFFFFFFFFFFFFFFFFFF0A24858500"
+	$"FFFFFFFFFFFFFFFFFFFF0A2486858501"
+	$"FFFFFFFFFFFF00FFFF0A24863F200000"
+	$"FFFFFFFFFF003F000A24863F202000FF"
+	$"FFFFFFFF003F400A24863F202000FFFF"
+	$"FFFFFF003F40400A863F202000FFFFFF"
+	$"FFFF004141410A640B202000400000FF"
+	$"FF00414141410A646400004141410000"
+	$"00414142410A290000919191910100B7"
+	$"B7000042420000B7B7B7B7B700910000"
+	$"FFB7000000434343434343009000B7B7"
+	$"FFFFB700900000454545000000B7FFFF"
+	$"FFFFFFB7006890004500B7B7FFFFFFFF"
+	$"FFFFFFFFB700000000B7B7FFFFFFFFFF"
+	$"FFFFFFFFFFB700B7FFB7FFFFFFFFFFFF"
+};
+
+// supported file type icons
+// text/*
+
+resource(2, "BEOS:text") #'VICN' array {
+	$"6E6369660505010200060338D2F73CD163BF82B23B84A94B88504870C900B6F5"
+	$"5CBDDCFFB3FFD7FFBA020106023E49240000000000003CAAAA4940004A3000FF"
+	$"CCFF897C4FB009040192020006023A55A6BAC2293F0DA33E958646C2EB4870EB"
+	$"00010101FF85CB520B0606AE0BB40BBF4D33C3AFB75DC173BDEFC607C13EC804"
+	$"CA28BD82C118B920C51BBB40BF07B8083AB6BC0605AE02B57D3EB9B9C3EFB7BB"
+	$"44BBB751BD75C936CA8EC1B1402F0A093B593D5BBFCDC93E455BC516C5F16046"
+	$"5B435D4544510A045A425E3F5A3D574008022E40BDB53308023142BE34BC0308"
+	$"023444C0E5BB5108023746C0D8BD7508023A48C270BDB508023D4A4CBD820802"
+	$"404CC408BFE6080A03020203000A0001011001178400040A020101000A000100"
+	$"1001178400040A010100000A04040604080A1815FF01178100040A0404060408"
+	$"0A18001501178200040A04030907051815FF0117810004"
+};
+
+resource(2, "BEOS:L:text") #'ICON' array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFF003F3F0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFF003F3F3F3F400000FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFF003F3F403F403F403F0000FFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF003F3F3F3F3F3F3F3F3F3F400000FFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFF003F3F403F403F403F403F403F403F0000FFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF003F3F3F3F3F3F3F683F3F3F3F3F3F3F3F400000FFFFFFFFFFFF"
+	$"FFFFFFFFFF003F3F403F403F4090403F403F403F403F403F403F0000FFFFFFFF"
+	$"FFFFFFFF003F3F403F403F40DE403F903F4068403F403F403F403F400000FFFF"
+	$"FFFFFF003F3F403F403F4090403F903F4090403F403F403F403F403F414100FF"
+	$"FFFF003F3F413F413F40B7413FB73F41DE413F683F4168413F413F414100FFFF"
+	$"FF0041414141414141DE4141B74141904141904141B7414141414141290EFFFF"
+	$"0000414141414141414141B74141B74141B74141B741414141414100000E0EFF"
+	$"FF0E0000414141414141414141DE4141B74141B7414141414141296868000EFF"
+	$"FFFF0E000000424242424242424242DE4242904242424242422968684300000E"
+	$"FFFFFF0E00900000424242424242424242DE42424242424200686829000E0E0E"
+	$"FFFFFFFF0E009090000043434343434343434343434343006800000E0EFFFFFF"
+	$"FFFFFFFFFF0E006890900000444444444444444444440000000E0EFFFFFFFFFF"
+	$"FFFFFFFFFFFF0E006868909000004545454545454500000E0EFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFF0E004368689090000045454545000E0EFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF0E00434368689090000045000E0EFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFF0E004343434300000E000E0EFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFF0E004300000E0E0E0E0EFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFF0E000E0EFFFFFF0EFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFF0EFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+};
+
+resource(2, "BEOS:M:text") #'MICN' array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF00FFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFF003F0000FFFFFFFFFFFFFF"
+	$"FFFFFFFF003F4141410000FFFFFFFFFF"
+	$"FFFFFF003F4141684141410000FFFFFF"
+	$"FFFF00414141B76868684141410000FF"
+	$"FF00414141B7B790B768689041410000"
+	$"004141424141B7B7B790B7414100000E"
+	$"0E00004242424242B7B7424229900000"
+	$"FF0E0000004343434343430090000E0E"
+	$"FFFF0E009000004545450000000EFFFF"
+	$"FFFFFF0E0068900045000E0EFFFFFFFF"
+	$"FFFFFFFF0E000000000E0EFFFFFFFFFF"
+	$"FFFFFFFFFF0E000EFF0EFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF0EFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+};
+
+// text/plain
+
+resource(0, "BEOS:text/plain") #'VICN' array {
+	$"6E6369660505010200060338D2F73CD163BF82B23B84A94B88504870C900B6F5"
+	$"5CBDDCFFB3FFD7FFBA020106023E49240000000000003CAAAA4940004A3000FF"
+	$"CCFF897C4FB009040192020006023A55A6BAC2293F0DA33E958646C2EB4870EB"
+	$"00010101FF85CB520B0606AE0BB40BBF4D33C3AFB75DC173BDEFC607C13EC804"
+	$"CA28BD82C118B920C51BBB40BF07B8083AB6BC0605AE02B57D3EB9B9C3EFB7BB"
+	$"44BBB751BD75C936CA8EC1B1402F0A093B593D5BBFCDC93E455BC516C5F16046"
+	$"5B435D4544510A045A425E3F5A3D574008022E40BDB53308023142BE34BC0308"
+	$"023444C0E5BB5108023746C0D8BD7508023A48C270BDB508023D4A4CBD820802"
+	$"404CC408BFE6080A03020203000A0001011001178400040A020101000A000100"
+	$"1001178400040A010100000A04040604080A1815FF01178100040A0404060408"
+	$"0A18001501178200040A04030907051815FF0117810004"
+};
+
+resource(0, "BEOS:L:text/plain") #'ICON' array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFF003F3F0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFF003F3F3F3F400000FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFF003F3F403F403F403F0000FFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF003F3F3F3F3F3F3F3F3F3F400000FFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFF003F3F403F403F403F403F403F403F0000FFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF003F3F3F3F3F3F3F683F3F3F3F3F3F3F3F400000FFFFFFFFFFFF"
+	$"FFFFFFFFFF003F3F403F403F4090403F403F403F403F403F403F0000FFFFFFFF"
+	$"FFFFFFFF003F3F403F403F40DE403F903F4068403F403F403F403F400000FFFF"
+	$"FFFFFF003F3F403F403F4090403F903F4090403F403F403F403F403F414100FF"
+	$"FFFF003F3F413F413F40B7413FB73F41DE413F683F4168413F413F414100FFFF"
+	$"FF0041414141414141DE4141B74141904141904141B7414141414141290EFFFF"
+	$"0000414141414141414141B74141B74141B74141B741414141414100000E0EFF"
+	$"FF0E0000414141414141414141DE4141B74141B7414141414141296868000EFF"
+	$"FFFF0E000000424242424242424242DE4242904242424242422968684300000E"
+	$"FFFFFF0E00900000424242424242424242DE42424242424200686829000E0E0E"
+	$"FFFFFFFF0E009090000043434343434343434343434343006800000E0EFFFFFF"
+	$"FFFFFFFFFF0E006890900000444444444444444444440000000E0EFFFFFFFFFF"
+	$"FFFFFFFFFFFF0E006868909000004545454545454500000E0EFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFF0E004368689090000045454545000E0EFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF0E00434368689090000045000E0EFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFF0E004343434300000E000E0EFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFF0E004300000E0E0E0E0EFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFF0E000E0EFFFFFF0EFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFF0EFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+};
+
+resource(0, "BEOS:M:text/plain") #'MICN' array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF00FFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFF003F0000FFFFFFFFFFFFFF"
+	$"FFFFFFFF003F4141410000FFFFFFFFFF"
+	$"FFFFFF003F4141684141410000FFFFFF"
+	$"FFFF00414141B76868684141410000FF"
+	$"FF00414141B7B790B768689041410000"
+	$"004141424141B7B7B790B7414100000E"
+	$"0E00004242424242B7B7424229900000"
+	$"FF0E0000004343434343430090000E0E"
+	$"FFFF0E009000004545450000000EFFFF"
+	$"FFFFFF0E0068900045000E0EFFFFFFFF"
+	$"FFFFFFFF0E000000000E0EFFFFFFFFFF"
+	$"FFFFFFFFFF0E000EFF0EFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF0EFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+};
+
+// text/x-source-code
+
+resource(1, "BEOS:text/x-source-code") #'VICN' array {
+	$"6E6369660505010200060338D2F73CD163BF82B23B84A94B88504870C900B6F5"
+	$"5CBDDCFFB3FFD7FFBA020106023E49240000000000003CAAAA4940004A3000FF"
+	$"CCFF897C4FB009040192020006023A55A6BAC2293F0DA33E958646C2EB4870EB"
+	$"00010101FF85CB520B0606AE0BB40BBF4D33C3AFB75DC173BDEFC607C13EC804"
+	$"CA28BD82C118B920C51BBB40BF07B8083AB6BC0605AE02B57D3EB9B9C3EFB7BB"
+	$"44BBB751BD75C936CA8EC1B1402F0A093B593D5BBFCDC93E455BC516C5F16046"
+	$"5B435D4544510A045A425E3F5A3D574008022E40BDB53308023142BE34BC0308"
+	$"023444C0E5BB5108023746C0D8BD7508023A48C270BDB508023D4A4CBD820802"
+	$"404CC408BFE6080A03020203000A0001011001178400040A020101000A000100"
+	$"1001178400040A010100000A04040604080A1815FF01178100040A0404060408"
+	$"0A18001501178200040A04030907051815FF0117810004"
+};
+
+resource(1, "BEOS:L:text/x-source-code") #'ICON' array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFF003F3F0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFF003F3F3F3F400000FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFF003F3F403F403F403F0000FFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF003F3F3F3F3F3F3F3F3F3F400000FFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFF003F3F403F403F403F403F403F403F0000FFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF003F3F3F3F3F3F3F683F3F3F3F3F3F3F3F400000FFFFFFFFFFFF"
+	$"FFFFFFFFFF003F3F403F403F4090403F403F403F403F403F403F0000FFFFFFFF"
+	$"FFFFFFFF003F3F403F403F40DE403F903F4068403F403F403F403F400000FFFF"
+	$"FFFFFF003F3F403F403F4090403F903F4090403F403F403F403F403F414100FF"
+	$"FFFF00003F413F413F40DE413FB73F41DE413F683F4168413F413F414100FFFF"
+	$"FF0041410000414141414141DE4141904141904141B7414141414141290EFFFF"
+	$"0000410000000000414141414141DE4141B74141B741414141414100000E0EFF"
+	$"FF0E0000004141410000414141414141DE4141B7414141414141296868000EFF"
+	$"FFFF0E000000420000000000424242424242DE4242424242422968684300000E"
+	$"FFFFFF0E009000000042424200004242424242424242424200686829000E0EFF"
+	$"FFFFFFFF0E009090000043000000000043434343434343006800000E0EFFFFFF"
+	$"FFFFFFFFFF0E006890900000004444440000444444440000000E0EFFFFFFFFFF"
+	$"FFFFFFFFFFFF0E006868909000004500000000004500000E0EFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFF0E004368689090000000454545000E0EFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF0E00434368689090000045000E0EFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFF0E004343434300000E000E0EFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFF0E004300000E0E0E0E0EFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFF0E000E0EFFFFFF0EFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFF0E0EFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+};
+
+resource(1, "BEOS:M:text/x-source-code") #'MICN' array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF00FFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFF003F0000FFFFFFFFFFFFFF"
+	$"FFFFFFFF003F4141410000FFFFFFFFFF"
+	$"FFFFFF003F4141684141410000FFFFFF"
+	$"FFFF00414141B76868684141410000FF"
+	$"FF00424242B7B790B768689042420000"
+	$"009090424242B7B7B790B7424200000E"
+	$"0E00009090434343B7B7434329900000"
+	$"FF0E0000009090454545450090000E0E"
+	$"FFFF0E009000009090450000000EFFFF"
+	$"FFFFFF0E0068900090000E0EFFFFFFFF"
+	$"FFFFFFFF0E000000000E0EFFFFFFFFFF"
+	$"FFFFFFFFFF0E000EFF0EFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF0E0EFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+};
+
+// text/x-vnd.hekkel-pe-group
+
+resource(3, "BEOS:text/x-vnd.hekkel-pe-group") #'VICN' array {
+	$"6E6369660905010200060338D2F73CD163BF82B23B84A94B88504870C900B6F5"
+	$"5CBDDCFFB3FFD7FFBA020106023E49240000000000003CAAAA4940004A3000FF"
+	$"CCFF897C4FB009040192020006023A55A6BAC2293F0DA33E958646C2EB4870EB"
+	$"00010101FF85CB520200060239D4CAB99C483D012D3D303349263B44C98100FF"
+	$"EC4BFFF0A506020006023AF09B3071D1B2419A3CB69F4A7D9542C87900FFFFFF"
+	$"FFFFF28902000602387D5937D1D7BBB5BC3C6B074B6A3646D22200F99B05FFEA"
+	$"B42304016E100606AE0BB40BBF4D33C3AFB75DC173BDEFC607C13EC804CA28BD"
+	$"82C118B986C51BBBA6BF07B86E3AB7220605AE02B57D3EB9B9C3EFB7BB44BBB7"
+	$"51BD75C936CA8EC1B1402F0A093B593D5BBFCDC93E455BC516C5F160465B435D"
+	$"4544510A045A425E3F5A3D574008022E40BDB53308023142BE34BC0308023444"
+	$"C0E5BB5108023746C0D8BD7508023A48C270BDB508023D4A4CBD820802404CC4"
+	$"08BFE60A044A445044593A53370A063E2F3E3C4A42523A522D472A0A043E2F3E"
+	$"3C4A424A330A043E2F4A33522D472A0A044A334A42523A522D0D0A0302020300"
+	$"0A0001011001178400040A020101000A0001001001178400040A010100000A04"
+	$"040604080A1815FF01178100040A04040604080A18001501178200040A040309"
+	$"07051815FF01178100040A08010B000A00010C1001178400040A05010D000A06"
+	$"010E000A07010F00"
+};
+
+resource(3, "BEOS:L:text/x-vnd.hekkel-pe-group") #'ICON' array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFF000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFF00FCFCFC0000FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF00000000FF00FCFCFCFCFCFC0000FFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF001B1B1B00FCFCFCFCFCFCFCFCFC00FFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFF001B1B3F00FCFCFCFCFCFCFCFCFC8B00FFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFF001B3F1B006565FCFCFCFCFCFC8B8B0000000000FFFFFFFFFFFFFF"
+	$"FFFFFFFFFF001B3F3F0065656565FCFCFC8B8B8B001B1B1B1B00000000FFFFFF"
+	$"FFFFFFFF001B3F3F3F006565656565658B8B8B8B003F3F3F3F1B1B1B00FFFFFF"
+	$"FFFFFFFF001B3F3F3F006565656565658B8B8B8B003F3F3F3F3F3F1B00FFFFFF"
+	$"FFFFFFFF001B3F1B3F006565656565658B8B8B8B001B3F1B3F1B3F000000FFFF"
+	$"FFFFFF001B3F1B3F1B006565656565658B8B8B001B3F1B3F1B3F1B00414100FF"
+	$"FFFF00001B1B3F1B3F1B0000656565658B8B001B3F1B3F1B3F1B3F004100FFFF"
+	$"FF00FF001B3F1B3F1B3F1B3F000065658B001B3F1B3F1B3F1B1B000029B0B0B0"
+	$"0000001B1B1B1B1B1B1B1B1B1B1B0000001B1B1B1B1B1B1B1B1B000000B0B0FF"
+	$"FFB0001B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B00006200B0FF"
+	$"FFFF00181B181B181B181B181B181B181B181B181B181B181B006200FC0000B0"
+	$"FF00000000001818181818181818181818181818181818181800620000B0B0B0"
+	$"FFFFFFFFB000000000000018181818181818181818181818180000B0B0FFFFFF"
+	$"FFFFFFFFFFB000628989000000000000151515151515151500B0B0FFFFFFFFFF"
+	$"FFFFFFFFFFFFB0006262898900004545000000000015151500FFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFB000FC626289890000454545450000000000FFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFB000FCFC6262898900004500B0B0FFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFB000FCFCFCFC0000B000B0B0FFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFB000FC0000B0B0B0B0B0FFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFB000B0B0FFFFFFB0FFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFB0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+};
+
+resource(3, "BEOS:M:text/x-vnd.hekkel-pe-group") #'MICN' array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF11FFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF0011FC1111FFFFFFFFFF"
+	$"FFFFFFFFFF0000FCFCFCFC11FFFFFFFF"
+	$"FFFFFFFF0012FCFCFCFCFC8B00FFFFFF"
+	$"FFFFFF001D1265FCFCFC8B8B00FFFFFF"
+	$"FFFF001D1D126565658B8B8B120000FF"
+	$"FF001D1D1D126565658B8B121D1D0000"
+	$"001D1D1D1D1D1265658B121D1D00000E"
+	$"0E00001D1D1D1D1212121D1D29890000"
+	$"FF0E0000001B1B1B1B1B1B0089000E0E"
+	$"FFFF0E008900001515150000000EFFFF"
+	$"FFFFFF0E0062890015000E0EFFFFFFFF"
+	$"FFFFFFFF0E000000000E0EFFFFFFFFFF"
+	$"FFFFFFFFFF0E000EFF0EFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+};
+
+// text/x-makefile
+
+resource(4, "BEOS:text/x-makefile") #'VICN' array {
+	$"6E6369660605010200060338D2F73CD163BF82B23B84A94B88504870C900FFCE"
+	$"89BDFFEACEFFFFBF7C020106023E49240000000000003CAAAA4940004A3000FF"
+	$"FFCD977CE28A55040192020006023A55A6BAC2293F0DA33E958646C2EB4870EB"
+	$"00010101FFC28F59020016023C335B3AD33ABAF8933C50734975EB49B9A100FD"
+	$"FF8D0D0606AE0BB40BBF4D33C3AFB75DC173BDEFC607C13EC804CA28BD82C118"
+	$"B920C51BBB40BF07B8083AB6BC0605AE02B57D3EB9B9C3EFB7BB44BBB751BD75"
+	$"C936CA8EC1B1402F0A093B593D5BBFCDC93E455BC516C5F160465B435D454451"
+	$"0A045A425E3F5A3D574008022E40BDB53308023142BE34BC0308023444C0E5BB"
+	$"5108023746C0D8BD7508023A48C270BDB508023D4A4CBD820802404CC408BFE6"
+	$"0221B97FBE29B97FBE29B891BE35B6F7BEFAB7B4BE80B6F7BEFAB728BFCEB6F2"
+	$"BF78B728BFCEB798C07BB798C07BB70AC0E7B661C228B69DC17BB661C228B59E"
+	$"C1F5B59EC1F5B53BC1DBB4C3C204B4C3C204B4A8C26EB49AC351B49AC2DEB49A"
+	$"C3CBB4C7C4AFB4A9C440B4C7C4AFB5A1C4BDB53EC4D8B5A1C4BDB665C486B665"
+	$"C486B6A1C52FB79BC62CB70EC5C2B79BC62CB72CC6D6B72CC6D6B6F5C72CB6FA"
+	$"C7ABB6FAC7ABB7B6C824B980C87AB892C86EB980C87AB9D0C7B3B9CBC818B9D0"
+	$"C7B3B9D9C6E4B9D9C6E433C6E1BBCEC644BB3EC6A6BBCEC644BC4DC6E3BC4DC6"
+	$"E3BC8CC732BD05C757BD05C757BDB6C6C7BE97C531BE42C60ABE97C531BDF2C4"
+	$"A8BE50C4CEBDF2C4A8BD33C45CBD33C45CBD4CC408BD59C352BD59C3AEBD59C2"
+	$"FABD36C252BD4DC2A4BD36C252BDF3C20BBDF3C20BBE53C1E7BE9CC17EBE9CC1"
+	$"7EBE49C0A3BD0ABF51BDBDBFE3BD0ABF51BC53BFC6BC94BF76BC53BFC6BBD4C0"
+	$"65BBD4C065BB44C001B9D940BA96BFC4B9D940B9D0BEF1B9D0BEF1B9CCBE8BB9"
+	$"80BE29B980BE29B980BE290204344934C2AC34C3FE314CBA6F4CB91D4C2E492E"
+	$"C3FF2EC2AD3146B91C46BA6E460B0A03020203000A0001011001178400040A02"
+	$"0101000A0001001001178400040A010100000A04040604080A1815FF01178100"
+	$"040A04040604080A18001501178200040A04030907051815FF01178100040A00"
+	$"020B0C1815FF01178400040A00020B0C18001501178600040A05020B0C00"
+};
+
+resource(4, "BEOS:L:text/x-makefile") #'ICON' array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFF003F3F0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFF003F3F3F3FDB0000FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFF003F3FDB3FDB3FDB3F0000FFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF003F3F3F3F3F3F3F3F3F3FDB0000FFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFF003F3FDB3FDB3FDB3FDB3FDB3FDB3F0000FFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF003F3F3F3F3F3F3F823F3F3F3F3F3F3F3FDB0000FFFFFFFFFFFF"
+	$"FFFFFFFFFF003F3FDB3FDB3FDBAADB3FDB3FDB3FDB3FDB3FDB3F0000FFFFFFFF"
+	$"FFFFFFFF003F3FDB3FDB3FDBF6DB3FAA3FDB82DB3FDB3FDB3FDB3FDB0000FFFF"
+	$"FFFFFF00DADADB3FDBDADBAADBDAAADADBAADBDADBDADBDADBDADBDADADA00FF"
+	$"FFFF00DA3FDA3FDADADBD1DA3FD13FDAF6DA3F823FDA82DA3FDA3FDADA00FFFF"
+	$"FF00DADADADADADADAF6DADAD1DADAAADADAAADADAD1DADADADADADA290EFFFF"
+	$"0000DADADADADADADADADAD1DADAD1DADAD1DADAD1DADADADADADA00000E0EFF"
+	$"FF0E0000DAD9DAD9DAD9DAD9DAF6DAD9D1D9DAD1DAD9DAD9DAD9298282000EFF"
+	$"FFFF0E000000D9D9D9D9D9D9D9D9D9F6D9D9AAD9D9D9D9D9D9298282D800000E"
+	$"FFFFFF0E00AA0000D9D9D9D9D9D9D9D9D9F6D9D9D9D9D9D900828229000E0E0E"
+	$"FFFFFFFF0E00AAAA0000D8D8D8D8D8D8D8D8D8D8D8D8D8008200000E0EFFFFFF"
+	$"FFFFFFFFFF0E0082AAAA0000F8F8F8F8F8F8F8F8F8F80000000E0EFFFFFFFFFF"
+	$"FFFFFFFFFFFF0E008282AAAA0000F9F9F9F9F9F9F900000E0EFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFF0E00D88282AAAA0000F9F9F9F9000E0EFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF0E00D8D88282AAAA0000F9000E0EFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFF0E00D8D8D8D800000E000E0EFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFF0E00D800000E0E0E0E0EFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFF0E000E0EFFFFFF0EFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFF0EFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+};
+
+resource(4, "BEOS:M:text/x-makefile") #'MICN' array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF00FFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFF003F0000FFFFFFFFFFFFFF"
+	$"FFFFFFFF003FDADB3F0000FFFFFFFFFF"
+	$"FFFFFF003FDB3F82DADB3F0000FFFFFF"
+	$"FFFF00DADADAD1828282DADBDA0000FF"
+	$"FF00DA3FDBD1D1AAD18282AADADA0000"
+	$"00DADAD9DADAD1D1D1AAD1DADA00000E"
+	$"0E0000D9D9D9D9D9D1D1D9D929AA0000"
+	$"FF0E000000D8D8D8D8D8D800AA000E0E"
+	$"FFFF0E00AA0000F9F9F90000000EFFFF"
+	$"FFFFFF0E0082AA00F9000E0EFFFFFFFF"
+	$"FFFFFFFF0E000000000E0EFFFFFFFFFF"
+	$"FFFFFFFFFF0E000EFF0EFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF0E000EFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+};
+
+// text/x-jamfile
+
+resource(5, "BEOS:text/x-jamfile") #'VICN' array {
+	$"6E6369660605010200060338D2F73CD163BF82B23B84A94B88504870C900FFCE"
+	$"89BDFFEACEFFFFBF7C020106023E49240000000000003CAAAA4940004A3000FF"
+	$"FFCD977CE28A55040192020006023A55A6BAC2293F0DA33E958646C2EB4870EB"
+	$"00010101FFC28F59020016023C335B3AD33ABAF8933C50734975EB49B9A100FD"
+	$"FF8D0D0606AE0BB40BBF4D33C3AFB75DC173BDEFC607C13EC804CA28BD82C118"
+	$"B920C51BBB40BF07B8083AB6BC0605AE02B57D3EB9B9C3EFB7BB44BBB751BD75"
+	$"C936CA8EC1B1402F0A093B593D5BBFCDC93E455BC516C5F160465B435D454451"
+	$"0A045A425E3F5A3D574008022E40BDB53308023142BE34BC0308023444C0E5BB"
+	$"5108023746C0D8BD7508023A48C270BDB508023D4A4CBD820802404CC408BFE6"
+	$"0221B97FBE29B97FBE29B891BE35B6F7BEFAB7B4BE80B6F7BEFAB728BFCEB6F2"
+	$"BF78B728BFCEB798C07BB798C07BB70AC0E7B661C228B69DC17BB661C228B59E"
+	$"C1F5B59EC1F5B53BC1DBB4C3C204B4C3C204B4A8C26EB49AC351B49AC2DEB49A"
+	$"C3CBB4C7C4AFB4A9C440B4C7C4AFB5A1C4BDB53EC4D8B5A1C4BDB665C486B665"
+	$"C486B6A1C52FB79BC62CB70EC5C2B79BC62CB72CC6D6B72CC6D6B6F5C72CB6FA"
+	$"C7ABB6FAC7ABB7B6C824B980C87AB892C86EB980C87AB9D0C7B3B9CBC818B9D0"
+	$"C7B3B9D9C6E4B9D9C6E433C6E1BBCEC644BB3EC6A6BBCEC644BC4DC6E3BC4DC6"
+	$"E3BC8CC732BD05C757BD05C757BDB6C6C7BE97C531BE42C60ABE97C531BDF2C4"
+	$"A8BE50C4CEBDF2C4A8BD33C45CBD33C45CBD4CC408BD59C352BD59C3AEBD59C2"
+	$"FABD36C252BD4DC2A4BD36C252BDF3C20BBDF3C20BBE53C1E7BE9CC17EBE9CC1"
+	$"7EBE49C0A3BD0ABF51BDBDBFE3BD0ABF51BC53BFC6BC94BF76BC53BFC6BBD4C0"
+	$"65BBD4C065BB44C001B9D940BA96BFC4B9D940B9D0BEF1B9D0BEF1B9CCBE8BB9"
+	$"80BE29B980BE29B980BE290204344934C2AC34C3FE314CBA6F4CB91D4C2E492E"
+	$"C3FF2EC2AD3146B91C46BA6E460B0A03020203000A0001011001178400040A02"
+	$"0101000A0001001001178400040A010100000A04040604080A1815FF01178100"
+	$"040A04040604080A18001501178200040A04030907051815FF01178100040A00"
+	$"020B0C1815FF01178400040A00020B0C18001501178600040A05020B0C00"
+};
+
+resource(5, "BEOS:L:text/x-jamfile") #'ICON' array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFF003F3F0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFF003F3F3F3FDB0000FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFF003F3FDB3FDB3FDB3F0000FFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF003F3F3F3F3F3F3F3F3F3FDB0000FFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFF003F3FDB3FDB3FDB3FDB3FDB3FDB3F0000FFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF003F3F3F3F3F3F3F823F3F3F3F3F3F3F3FDB0000FFFFFFFFFFFF"
+	$"FFFFFFFFFF003F3FDB3FDB3FDBAADB3FDB3FDB3FDB3FDB3FDB3F0000FFFFFFFF"
+	$"FFFFFFFF003F3FDB3FDB3FDBF6DB3FAA3FDB82DB3FDB3FDB3FDB3FDB0000FFFF"
+	$"FFFFFF003F3FDB3FDB3FDBAADB3FAA3FDBAADB3FDB3FDB3FDB3FDB3FDADA00FF"
+	$"FFFF003F3FDA3FDA3FDBD1DA3FD13FDAF6DA3F823FDA82DA3FDA3FDADA00FFFF"
+	$"FF003FDADADADADADAF6DADAD1DADAAADADAAADADAD1DADADADADADA290EFFFF"
+	$"0000DADADADADADADADADAD1DADAD1DADAD1DADAD1DADADADADA1F00000E0EFF"
+	$"FF0E0000DADADADADADADADADAF6DADAD1DADAD1DADADADADADA298282000EFF"
+	$"FFFF0E000000D9D9D9D9D9D9D9D9D9F6D9D9AAD9D9D9D9D9D9298282D800000E"
+	$"FFFFFF0E00AA0000D9D9D9D9D9D9D9D9D9F6D9D9D9D9D9D900828229000E0E0E"
+	$"FFFFFFFF0E00AAAA0000D8D8D8D8D8D8D8D8D8D8D8D8D8008200000E0EFFFFFF"
+	$"FFFFFFFFFF0E0082AAAA0000F8F8F8F8F8F8F8F8F8F80000000E0EFFFFFFFFFF"
+	$"FFFFFFFFFFFF0E008282AAAA0000F9F9F9F9F9F9F900000E0EFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFF0E00D88282AAAA0000F9F9F9F9000E0EFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF0E00D8D88282AAAA0000F9000E0EFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFF0E00D8D8D8D800000E000E0EFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFF0E00D800000E0E0E0E0EFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFF0E000E0EFFFFFF0EFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFF0EFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+};
+
+resource(5, "BEOS:M:text/x-jamfile") #'MICN' array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF00FFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFF003F0000FFFFFFFFFFFFFF"
+	$"FFFFFFFF003FDADB3F0000FFFFFFFFFF"
+	$"FFFFFF003FDB3F82DADB3F0000FFFFFF"
+	$"FFFF00DADADAD1828282DADBDA0000FF"
+	$"FF00DA3FDBD1D1AAD18282AADADA0000"
+	$"00DADAD9DADAD1D1D1AAD1DADA00000E"
+	$"0E0000D9D9D9D9D9D1D1D9D929AA0000"
+	$"FF0E000000D8D8D8D8D8D800AA000E0E"
+	$"FFFF0E00AA0000F9F9F90000000EFFFF"
+	$"FFFFFF0E0082AA00F9000E0EFFFFFFFF"
+	$"FFFFFFFF0E000000000E0EFFFFFFFFFF"
+	$"FFFFFFFFFF0E000EFF0EFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF0E000EFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+};
+
+// text/x-rez
+
+resource(6, "BEOS:text/x-rez") #'VICN' array {
+	$"6E63696607050102000603399E0F3D9C0ABF82B23B84A94B88504870C900A5B1"
+	$"FFBCEAF1FFFFB3B8FF020106023E49240000000000003CAAAA4940004A3000FF"
+	$"C0D5FF7C896EFF040192020006023A4BAE3411A9B629883C6629495368484715"
+	$"00FFF9BAFFFFC104020006023A6A0E3670BCB6D8C13AD0F64A21BC4A0DF300BA"
+	$"DCFFFF2A20F10200060239AAD5343BA5B6E7993C629D4ABB354803A500E99797"
+	$"FFCE3232070606AE0BB40BBF4D33C3AFB75DC173BDEFC607C13EC804CA28BD82"
+	$"C118B920C51BBB40BF07B8083AB6BC0605AE02B57D3EB9B9C3EFB7BB44BBB751"
+	$"BD75C936CA8EC1B1402F0A093B593D5BBFCDC93E455BC516C5F160465B435D45"
+	$"44510A045A425E3F5A3D57400A063236323D3A41403E403739330A063A433A4A"
+	$"404D464A464341400A064237423E48424E3F4E394835090A03020203000A0001"
+	$"011001178400040A020101000A0001001001178400040A010100000A00030405"
+	$"061001178400040A040104000A050105000A06010600"
+};
+
+resource(6, "BEOS:L:text/x-rez") #'ICON' array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFF003F3F0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFF003F3F3F3F400000FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFF003F3F403F403F403F0000FFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF003F3F3F3F3F3F3F3F3F3F400000FFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFF003F3F403F403F403F403F403F403F0000FFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF003F3F3F3F3F3F3F683F3F3F3F3F3F3F3F400000FFFFFFFFFFFF"
+	$"FFFFFFFFFF003F3F403F403F4090403F403F403F403F403F403F0000FFFFFFFF"
+	$"FFFFFFFF003F3F403F403F40DE403F903F4000003F403F403F403F400000FFFF"
+	$"FFFFFF003F3F403F403F4090403F903F400060600000403F403F403F414100FF"
+	$"FFFF003F3F413F413F40B7413FB73F4100606060606000003F413F414100FFFF"
+	$"FF0041414141414141DE4141B7414100606060606060606000004141290EFFFF"
+	$"0000414141414141414141B741410060606060606060606060600000000E0EFF"
+	$"FF0E0000414141414141414141006060606060606060606060D3000E68000EFF"
+	$"FFFF0E000000424242424242003F60606060606060606060D3D3000E430000FF"
+	$"FFFFFF0E0090000042424242008C3F3F60606060606060D3D3D3000E0E0E0EFF"
+	$"FFFFFFFF0E00909000004343008C8C8C3F3F60606060D3D3D3D3000E0E0E0EFF"
+	$"FFFFFFFFFF0E006890900000008C8C8C8C8C3F3F60D3D3D3D3D3000E0E0E0EFF"
+	$"FFFFFFFFFFFF0E0068689090008C8C8C8C8C8C8CD3D3D3D3D3D3000E0E0E0EFF"
+	$"FFFFFFFFFFFFFF0E00436868008C8C8C8C8C8C8CD3D3D3D3D3D3000E0E0EFFFF"
+	$"FFFFFFFFFFFFFFFF0E004343008C8C8C8C8C8C8CD3D3D3D3D3000E0E0EFFFFFF"
+	$"FFFFFFFFFFFFFFFFFF0E0043008C8C8C8C8C8C8CD3D3D3D3000E0E0EFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFF0E004300008C8C8C8C8CD3D3D3000E0E0EFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFF0E000E0E00008C8C8CD3D3000E0E0EFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFF0EFFFFFFFF00008CD3000E0E0EFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000E0E0EFFFFFFFFFFFFFFFF"
+};
+
+resource(6, "BEOS:M:text/x-rez") #'MICN' array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF00FFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFF003F0000FFFFFFFFFFFFFF"
+	$"FFFFFFFF003F4141410000FFFFFFFFFF"
+	$"FFFFFF003F4141684141410000FFFFFF"
+	$"FFFF00414141B76868684141410000FF"
+	$"FF00414141B7B790B7684343414100FF"
+	$"004141424141B7B743430000410000FF"
+	$"0E0000424242424243006060000000FF"
+	$"FF0E00000043434300606060606000FF"
+	$"FFFF0E00900000003F3F606060D300FF"
+	$"FFFFFF0E006890008C8C3F3FD3D300FF"
+	$"FFFFFFFF0E0000008C8C8C8CD3D300FF"
+	$"FFFFFFFFFF0E00008C8C8C8CD3D300FF"
+	$"FFFFFFFFFFFF0EFF00008C8CD3000EFF"
+	$"FFFFFFFFFFFFFFFFFFFF0000000EFFFF"
+};
+

Modified: trunk/Resources/pe.types.rsrc
===================================================================
(Binary files differ)



From axeld at mail.berlios.de  Wed Oct  8 23:41:59 2008
From: axeld at mail.berlios.de (axeld at BerliOS)
Date: Wed, 8 Oct 2008 23:41:59 +0200
Subject: [pe-commits] r540 - in trunk: . Extensions Sources build
Message-ID: <200810082141.m98LfxJY009177@sheep.berlios.de>

Author: axeld
Date: 2008-10-08 23:41:58 +0200 (Wed, 08 Oct 2008)
New Revision: 540
ViewCVS: http://svn.berlios.de/viewcvs/pe-editor?rev=540&view=rev

Modified:
   trunk/Extensions/Jamfile
   trunk/Jamrules
   trunk/Sources/Jamfile
   trunk/build/BuildSettings
Log:
* Incorporated some of Scott's /boot/common changes in a way that they don't
  affect the BeOS build.


Modified: trunk/Extensions/Jamfile
===================================================================
--- trunk/Extensions/Jamfile	2008-10-08 15:09:50 UTC (rev 539)
+++ trunk/Extensions/Jamfile	2008-10-08 21:41:58 UTC (rev 540)
@@ -3,7 +3,8 @@
 SubDirHdrs $(TOP) Sources ;
 
 SubDirSysHdrs /boot/home/config/include ;
-LINKFLAGS += -L/boot/home/config/lib ;
+SubDirSysHdrs /boot/common/include ;
+LINKFLAGS += -L/boot/home/config/lib -L/boot/common/lib ;
 
 # <pe-src>
 PeExtension PrefixLines 

Modified: trunk/Jamrules
===================================================================
--- trunk/Jamrules	2008-10-08 15:09:50 UTC (rev 539)
+++ trunk/Jamrules	2008-10-08 21:41:58 UTC (rev 540)
@@ -48,7 +48,12 @@
 	mkdir $(DISTRO_DIR)/Documentation/gifs ;
 	cp -a $(TOP)/doc/gifs/*.gif $(DISTRO_DIR)/Documentation/gifs/ ;
 	ln -sf Documentation/index.html $(DISTRO_DIR)/Documentation.html ;
-	ln -sf /boot/home/config/bin/ $(DISTRO_DIR)/\(drag\ lpe\ here\ to\ install\) ;
-	cp -a /boot/home/config/lib/libpcre*.so $(DISTRO_DIR)/lib/ ;
+	if $(uname -s) = "Haiku"; then
+		ln -sf /boot/common/bin/ $(DISTRO_DIR)/\(drag\ lpe\ here\ to\ install\) ;
+		cp -a /boot/common/lib/libpcre*.so $(DISTRO_DIR)/lib/ ;
+	else
+		ln -sf /boot/home/config/bin/ $(DISTRO_DIR)/\(drag\ lpe\ here\ to\ install\) ;
+		cp -a /boot/home/config/lib/libpcre*.so $(DISTRO_DIR)/lib/ ;
+	fi
 }
 

Modified: trunk/Sources/Jamfile
===================================================================
--- trunk/Sources/Jamfile	2008-10-08 15:09:50 UTC (rev 539)
+++ trunk/Sources/Jamfile	2008-10-08 21:41:58 UTC (rev 540)
@@ -41,7 +41,8 @@
 DEFINES = $(SAVED_DEFINES) ;
 
 SubDirSysHdrs /boot/home/config/include ;
-LINKFLAGS += -L/boot/home/config/lib ;
+SubDirSysHdrs /boot/common/include ;
+LINKFLAGS += -L/boot/home/config/lib -L/boot/common/lib ;
 
 #<pe-src>
 Application pe : 

Modified: trunk/build/BuildSettings
===================================================================
--- trunk/build/BuildSettings	2008-10-08 15:09:50 UTC (rev 539)
+++ trunk/build/BuildSettings	2008-10-08 21:41:58 UTC (rev 540)
@@ -43,13 +43,15 @@
 # check for pcre...
 local haveHeadersPcre = [ GLOB /boot/develop/headers/pcre : pcre.h ] ;
 if $(haveHeadersPcre) {
-	Echo Have ;
 	CCFLAGS += -isystem /boot/develop/headers/pcre ;
 	C++FLAGS += -isystem /boot/develop/headers/pcre ;
 } else {
-	haveHeadersPcre = [ GLOB /boot/home/config/include : pcre.h ] ;
+	haveHeadersPcre = [ GLOB /boot/common/include : pcre.h ] ;
 	if ! $(haveHeadersPcre) {
-		Exit "You need to have pcre installed on your system." ;
+		haveHeadersPcre = [ GLOB /boot/home/config/include : pcre.h ] ;
+		if ! $(haveHeadersPcre) {
+			Exit "You need to have pcre installed on your system." ;
+		}
 	}
 }
 



From axeld at mail.berlios.de  Thu Oct  9 16:19:31 2008
From: axeld at mail.berlios.de (axeld at BerliOS)
Date: Thu, 9 Oct 2008 16:19:31 +0200
Subject: [pe-commits] r541 - trunk/lpe
Message-ID: <200810091419.m99EJVHf002923@sheep.berlios.de>

Author: axeld
Date: 2008-10-09 16:19:31 +0200 (Thu, 09 Oct 2008)
New Revision: 541
ViewCVS: http://svn.berlios.de/viewcvs/pe-editor?rev=541&view=rev

Modified:
   trunk/lpe/lpe.cpp
Log:
* Minor cleanup, removed some useless cruft.


Modified: trunk/lpe/lpe.cpp
===================================================================
--- trunk/lpe/lpe.cpp	2008-10-08 21:41:58 UTC (rev 540)
+++ trunk/lpe/lpe.cpp	2008-10-09 14:19:31 UTC (rev 541)
@@ -31,15 +31,12 @@
 	ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 	
 	
 	Created: 02/23/98 20:50:08
-	
-cd ~/projects/pe/lpe
-mwcc -prefix BeHeaders lpe.cpp
-cp lpe ~/config/bin
 */
 
 #include <vector>
 #include <cstdio>
 #include <cstdarg>
+
 #include <Message.h>
 #include <Roster.h>
 #include <String.h>
@@ -86,7 +83,7 @@
 		DoError("Could not find Pe!");
 	
 	status_t err;
-	if (! be_roster->IsRunning(&pe))
+	if (!be_roster->IsRunning(&pe))
 	{
 		team_id team;
 		err = be_roster->Launch(&pe, &msg, &team);
@@ -94,15 +91,15 @@
 		// now wait for the requested edit-window to come up (filter out standard
 		// windows):
 		bool foundThread = false;
-		while(!foundThread)
+		while (!foundThread)
 		{
 			int32 cookie = 0;
 			thread_info tinfo;
-			while((err = get_next_thread_info(team, &cookie, &tinfo)) == B_OK)
+			while ((err = get_next_thread_info(team, &cookie, &tinfo)) == B_OK)
 			{
 				if (!strncmp("w>", tinfo.name, 2) 
-				&& strcmp("w>pe: Open", tinfo.name)
-				&& strcmp("w>/boot/home/config/settings/pe", tinfo.name))
+					&& strcmp("w>pe: Open", tinfo.name)
+					&& strcmp("w>/boot/home/config/settings/pe", tinfo.name))
 				{
 					threads.push_back(tinfo.thread);
 					foundThread = true;
@@ -150,7 +147,7 @@
 		{
 			case '+':
 				lineNr = strtoul(argv[i] + 1, &p, 10);
-				if (! p || p == argv[i] + 1) Usage();
+				if (!p || p == argv[i] + 1) Usage();
 				break;
 			
 			default:



From axeld at mail.berlios.de  Thu Oct  9 16:24:38 2008
From: axeld at mail.berlios.de (axeld at BerliOS)
Date: Thu, 9 Oct 2008 16:24:38 +0200
Subject: [pe-commits] r542 - trunk/doc
Message-ID: <200810091424.m99EOcBs004073@sheep.berlios.de>

Author: axeld
Date: 2008-10-09 16:24:38 +0200 (Thu, 09 Oct 2008)
New Revision: 542
ViewCVS: http://svn.berlios.de/viewcvs/pe-editor?rev=542&view=rev

Modified:
   trunk/doc/VariousTips.html
Log:
* Mentioned that "lpe" is put to /boot/common/bin in Haiku instead of /boot/home/config/bin.
* Updated "last updated".
* Removed info at hekkelman.com mail address for now.


Modified: trunk/doc/VariousTips.html
===================================================================
--- trunk/doc/VariousTips.html	2008-10-09 14:19:31 UTC (rev 541)
+++ trunk/doc/VariousTips.html	2008-10-09 14:24:38 UTC (rev 542)
@@ -58,9 +58,9 @@
 		<p>Incremental search is a powerful feature, which you can start by a keystroke or by clicking the Incremental Search button. When Pe is in Incremental Search mode, every character you type is added to a search string and Pe will immediately try to find that string. By default Incremental Search is case insensitive but you can change this.<br>
 		The search pattern will be entered into the Find Dialog, so if you feel the need to see the search string you entered, you can find it there. If you type the Incremental Search command twice, the last search pattern will be re-used.
 
-		<p>During installation a commandline application called lpe was installed in the config/bin directory. You can use this app to use Pe as if it was a commandline editor. To let other commandline based applications like CVS use this you should set the environmental variable EDITOR to /boot/home/config/bin/lpe. You can do that by adding the following line to your UserSetupenvironment file (which you can find in the ~/config/boot directory).
+		<p>During installation a commandline application called "lpe" was installed in the common/bin (Haiku) or config/bin (BeOS) directory. You can use this app to use Pe as if it was a commandline editor. To let other commandline based applications like CVS use this you should set the environmental variable EDITOR to lpe. You can do that by adding the following line to your UserSetupEnvironment file (which you can find in the ~/config/boot directory).
 <code><pre>
-export EDITOR=/boot/home/config/bin/lpe
+export EDITOR=lpe
 </pre></code>
 
 		<hr>
@@ -72,9 +72,9 @@
 		<td colspan=3>
 			<!-- #include "./addr_incl.html" -->
 			<address>
-				<p>Last updated: 05/17/98<br>
-				Copyright 1997,1998, &copy; Hekkelman Programmatuur,<br>
-				<a href="mailto:info at hekkelman.com">info at hekkelman.com</a>
+				<p>Last updated: 10/09/2008<br>
+				Copyright 1997,1998, &copy; Hekkelman Programmatuur<br>
+				<!-- a href="mailto:info at hekkelman.com">info at hekkelman.com</a -->
 			</address>
 			<!-- end include -->
 		</td>



From axeld at mail.berlios.de  Thu Oct  9 16:46:30 2008
From: axeld at mail.berlios.de (axeld at BerliOS)
Date: Thu, 9 Oct 2008 16:46:30 +0200
Subject: [pe-commits] r543 - trunk/Languages/Sources
Message-ID: <200810091446.m99EkThZ007421@sheep.berlios.de>

Author: axeld
Date: 2008-10-09 16:46:29 +0200 (Thu, 09 Oct 2008)
New Revision: 543
ViewCVS: http://svn.berlios.de/viewcvs/pe-editor?rev=543&view=rev

Modified:
   trunk/Languages/Sources/Lout_Language.cpp
   trunk/Languages/Sources/Lout_Popup.l
Log:
* Factored the path retrieval out of AddSysDataBase() and AddSysInclude() to
  GetLoutDirectory().
* Improved the code by using BPath instead of doing ugly string stuff.
* Now uses find_directory() for retrieving the lout data directory, instead of
  hard coded paths. It now also uses the B_COMMON_ETC_DIRECTORY as a possible
  source, and thus incorporates the last missing piece of Scott's diff.
* Minor coding style cleanup.


Modified: trunk/Languages/Sources/Lout_Language.cpp
===================================================================
--- trunk/Languages/Sources/Lout_Language.cpp	2008-10-09 14:24:38 UTC (rev 542)
+++ trunk/Languages/Sources/Lout_Language.cpp	2008-10-09 14:46:29 UTC (rev 543)
@@ -58,7 +58,8 @@
 static inline bool
 isOperator(char c)
 {
-	switch (c) {
+	switch (c)
+	{
 		case '/': 
 			return true;	// Can be: /, // or ^/
 		case '|': 

Modified: trunk/Languages/Sources/Lout_Popup.l
===================================================================
--- trunk/Languages/Sources/Lout_Popup.l	2008-10-09 14:24:38 UTC (rev 542)
+++ trunk/Languages/Sources/Lout_Popup.l	2008-10-09 14:46:29 UTC (rev 543)
@@ -37,7 +37,7 @@
 
   Caveats:
     - This assumes that lout's data is installed under:
-      "/boot/home/config/etc/lout/"
+      "/boot/home/config/etc/lout/" or "/boot/common/etc/lout/"
       *but*
       if the enviromental variable "$LOUTLIB" is found, it's value is used
       instead (make sure it is correct!).
@@ -194,12 +194,49 @@
 }
 
 
+static bool PathExists(const BPath& path)
+{
+	BEntry entry(path.Path(), true);
+	return entry.Exists();
+}
+
+
+static status_t GetLoutDirectory(const char* subDir, BPath& path)
+{
+	static const char* kLoutDir = getenv("LOUTLIB");
+
+	if (kLoutDir != NULL)
+	{
+		path.SetTo(kLoutDir);
+		path.Append(subDir);
+	}
+
+	if (kLoutDir == NULL || !PathExists(path))
+	{
+		if (find_directory(B_USER_CONFIG_DIRECTORY, &path) == B_OK)
+		{
+			path.Append("etc/lout");
+			path.Append(subDir);
+		}
+
+		if (!PathExists(path))
+		{
+			if (find_directory(B_COMMON_ETC_DIRECTORY, &path) == B_OK)
+			{
+				path.Append("lout");
+				path.Append(subDir);
+			}
+			if (!PathExists(path))
+				return B_ENTRY_NOT_FOUND;
+		}
+	}
+
+	return B_OK;
+}
+
+
 static void AddSysDataBase(CLanguageProxy& proxy)
 {
-	static const char* kLoutDataDir = "/boot/home/config/etc/lout/data/";
-	static const size_t kLoutDataDirLen = strlen(kLoutDataDir);
-	static const char* kLoutLib = getenv("LOUTLIB");
-
 	char *s, *i = yytext;
 
 	s = strrchr(i, '}');
@@ -211,35 +248,21 @@
 	s++;
 
 	s = trimstring(s);
-	char* tmp;
 
-	if (kLoutLib != NULL) {
-		tmp = (char*) calloc(1, strlen(kLoutLib) + 6 + strlen(s) + 4);
-		if (!tmp)
-			return;
-		strcat(tmp, kLoutLib);
-		strcat(tmp, "/data/");
-	}
-	else {
-		tmp = (char*) calloc(1, kLoutDataDirLen + strlen(s) + 4);
-		if (!tmp)
-			return;
-		strcat(tmp, kLoutDataDir);
-	}
+	BPath path;
+	if (GetLoutDirectory("data", path) != B_OK)
+		return;
 
-	strcat(tmp, s);
-	strcat(tmp, ".ld");
-	proxy.AddInclude(s, tmp);
-	free(tmp);
+	BString name = s;
+	name << ".ld";
+	path.Append(name.String());
+
+	proxy.AddInclude(s, path.Path());
 }
 
 
 static void AddSysInclude(CLanguageProxy& proxy)
 {
-	static const char* kLoutIncludeDir = "/boot/home/config/etc/lout/include/";
-	static const size_t kLoutIncludeDirLen = strlen(kLoutIncludeDir);
-	static const char* kLoutLib = getenv("LOUTLIB");
-
 	char *s, *i = yytext;
 
 	s = strrchr(i, '}');
@@ -253,23 +276,13 @@
 	s = trimstring(s);
 	char* tmp;
 
-	if (kLoutLib != NULL) {
-		tmp = (char*) calloc(1, strlen(kLoutLib) + 9 + strlen(s) + 4);
-		if (!tmp)
-			return;
-		strcat(tmp, kLoutLib);
-		strcat(tmp, "/include/");
-	}
-	else {
-		tmp = (char*) calloc(1, kLoutIncludeDirLen + strlen(s) + 4);
-		if (!tmp)
-			return;
-		strcat(tmp, kLoutIncludeDir);
-	}
+	BPath path;
+	if (GetLoutDirectory("include", path) != B_OK)
+		return;
 
-	strcat(tmp, s);
-	proxy.AddInclude(s, tmp);
-	free(tmp);
+	path.Append(s);
+
+	proxy.AddInclude(s, path.Path());
 }
 
 



From mmu_man at mail.berlios.de  Fri Oct 10 23:57:31 2008
From: mmu_man at mail.berlios.de (mmu_man at BerliOS)
Date: Fri, 10 Oct 2008 23:57:31 +0200
Subject: [pe-commits] r544 - trunk/Sources
Message-ID: <200810102157.m9ALvVpS014790@sheep.berlios.de>

Author: mmu_man
Date: 2008-10-10 23:57:31 +0200 (Fri, 10 Oct 2008)
New Revision: 544
ViewCVS: http://svn.berlios.de/viewcvs/pe-editor?rev=544&view=rev

Modified:
   trunk/Sources/PText.cpp
Log:
Try to find which function we are in and mark it in the function popup.


Modified: trunk/Sources/PText.cpp
===================================================================
--- trunk/Sources/PText.cpp	2008-10-09 14:46:29 UTC (rev 543)
+++ trunk/Sources/PText.cpp	2008-10-10 21:57:31 UTC (rev 544)
@@ -2321,11 +2321,20 @@
 };
 
 struct MenuFunctionScanHandler : public CFunctionScanHandler {
-	MenuFunctionScanHandler(bool sorted, int whichVal)
+	MenuFunctionScanHandler(bool sorted, int whichVal, int where)
 		: sorted(sorted)
 		, which(whichVal)
+		, where(where)
+		, closest(-1)
+		, closestItem(NULL)
 	{
 	}
+	
+	~MenuFunctionScanHandler()
+	{
+		if (closestItem)
+			closestItem->SetMarked(true);
+	}
 
 	void AddFunction(const char *name, const char *match, int offset,
 		bool italic, uint32 nestLevel, const char *params)
@@ -2344,10 +2353,16 @@
 			indName.Prepend(' ', indent);
 		}
 
+		BMenuItem *item;
 		if (italic)
-			functions.AddItem(new PItalicMenuItem(indName.String(), msg));
+			item = new PItalicMenuItem(indName.String(), msg);
 		else
-			functions.AddItem(new BMenuItem(indName.String(), msg));
+			item = new BMenuItem(indName.String(), msg);
+		functions.AddItem(item);
+
+		// we might be in this function
+		if (offset > closest && offset < where)
+			closestItem = item;
 	}
 
 	void AddInclude(const char *name, const char *open, bool italic)
@@ -2388,6 +2403,9 @@
 	BList includes, functions;
 	bool sorted;
 	int which;
+	int where;
+	int closest;
+	BMenuItem *closestItem;
 };
 
 void PText::ShowFunctionMenu(BPoint where, int which)
@@ -2399,7 +2417,7 @@
 	bool optionDown = (ki.modifiers & (B_OPTION_KEY | B_SHIFT_KEY | B_COMMAND_KEY)) != 0;
 	bool sorted = (optionDown != gPrefs->GetPrefInt(prf_I_SortPopup));
 
-	MenuFunctionScanHandler handler(sorted, which);
+	MenuFunctionScanHandler handler(sorted, which, Caret());
 
 	BList& includes = handler.includes;
 	BList& functions = handler.functions;



From mmu_man at mail.berlios.de  Sat Oct 11 00:13:03 2008
From: mmu_man at mail.berlios.de (mmu_man at BerliOS)
Date: Sat, 11 Oct 2008 00:13:03 +0200
Subject: [pe-commits] r545 - trunk/Languages/Sources
Message-ID: <200810102213.m9AMD3aF016641@sheep.berlios.de>

Author: mmu_man
Date: 2008-10-11 00:13:03 +0200 (Sat, 11 Oct 2008)
New Revision: 545
ViewCVS: http://svn.berlios.de/viewcvs/pe-editor?rev=545&view=rev

Modified:
   trunk/Languages/Sources/Shell_Language.cpp
Log:
Only handle # has a comment mark if it's the first char on the line, or if a space precedes it. It fixes highlighting something like this as a comment:
if [ $# -lt 1 ]; then
Also, "echo#foo" is searched as such by bash, so we really only want a space before # for comments.


Modified: trunk/Languages/Sources/Shell_Language.cpp
===================================================================
--- trunk/Languages/Sources/Shell_Language.cpp	2008-10-10 21:57:31 UTC (rev 544)
+++ trunk/Languages/Sources/Shell_Language.cpp	2008-10-10 22:13:03 UTC (rev 545)
@@ -54,7 +54,7 @@
 	const char *text = proxy.Text();
 	int size = proxy.Size();
 	int i = 0, s = 0, kws = 0, esc = 0;
-	char c;
+	char c = 0;
 	bool leave = false;
 	
 	if (state == LCOMMENT)
@@ -67,11 +67,12 @@
 	
 	while (!leave)
 	{
+		char b = c;
 		GETCHAR;
 		
 		switch (state) {
 			case START:
-				if (c == '#')
+				if (c == '#' && (!b || isspace(b)))
 					state = LCOMMENT;
 				else if (isalpha(c) || c == '_')
 				{



From mmu_man at mail.berlios.de  Wed Oct 15 16:06:25 2008
From: mmu_man at mail.berlios.de (mmu_man at BerliOS)
Date: Wed, 15 Oct 2008 16:06:25 +0200
Subject: [pe-commits] r546 - trunk/Extensions
Message-ID: <200810151406.m9FE6Pn1005430@sheep.berlios.de>

Author: mmu_man
Date: 2008-10-15 16:06:25 +0200 (Wed, 15 Oct 2008)
New Revision: 546
ViewCVS: http://svn.berlios.de/viewcvs/pe-editor?rev=546&view=rev

Modified:
   trunk/Extensions/HeaderHeader.cpp
Log:
Fix (c)Haiku header to include the "Inc".


Modified: trunk/Extensions/HeaderHeader.cpp
===================================================================
--- trunk/Extensions/HeaderHeader.cpp	2008-10-10 22:13:03 UTC (rev 545)
+++ trunk/Extensions/HeaderHeader.cpp	2008-10-15 14:06:25 UTC (rev 546)
@@ -44,7 +44,7 @@
 ";
 
 static const char *sHaikuHeaderTemplate = "%COMMS%
-%COMMC% Copyright %YEAR%, Haiku.
+%COMMC% Copyright %YEAR%, Haiku, Inc.
 %COMMC% Distributed under the terms of the MIT License.
 %COMMC%
 %COMMC% Authors:



From stippi at mail.berlios.de  Fri Oct 17 01:11:46 2008
From: stippi at mail.berlios.de (stippi at BerliOS)
Date: Fri, 17 Oct 2008 01:11:46 +0200
Subject: [pe-commits] r547 - trunk/Sources
Message-ID: <200810162311.m9GNBkIj000804@sheep.berlios.de>

Author: stippi
Date: 2008-10-17 01:11:45 +0200 (Fri, 17 Oct 2008)
New Revision: 547
ViewCVS: http://svn.berlios.de/viewcvs/pe-editor?rev=547&view=rev

Modified:
   trunk/Sources/PDoc.cpp
Log:
When the GroupWindow was showing, Pe crashed in PDoc::MenusBeginning(). Reported
by Alexandre Deckner.


Modified: trunk/Sources/PDoc.cpp
===================================================================
--- trunk/Sources/PDoc.cpp	2008-10-15 14:06:25 UTC (rev 546)
+++ trunk/Sources/PDoc.cpp	2008-10-16 23:11:45 UTC (rev 547)
@@ -1570,7 +1570,7 @@
 		if ((doc && doc->IsWorksheet()) || !w)
 			continue;
 		// Count files to be saved
-		if (doc->IsDirty() || !doc->EntryRef())
+		if (doc && (doc->IsDirty() || !doc->EntryRef()))
 			unsavedDocs++;
 		BMessage *msg = new BMessage(msg_SelectWindow);
 		msg->AddPointer("window", w);



