From zooey at berlios.de  Fri Jan 13 19:02:49 2006
From: zooey at berlios.de (zooey at BerliOS)
Date: Fri, 13 Jan 2006 19:02:49 +0100
Subject: [pe-commits]r417 - trunk/Sources
Message-ID: <200601131802.k0DI2n1q029526@sheep.berlios.de>

Author: zooey
Date: 2006-01-13 19:02:46 +0100 (Fri, 13 Jan 2006)
New Revision: 417
ViewCVS: http://svn.berlios.de/viewcvs/pe-editor?rev=417&view=rev

Modified:
   trunk/Sources/CDiffWindow.cpp
   trunk/Sources/CDocWindow.cpp
   trunk/Sources/CDocWindow.h
   trunk/Sources/PApp.cpp
   trunk/Sources/PDoc.cpp
   trunk/Sources/PDoc.h
   trunk/Sources/PErrorWindow.cpp
   trunk/Sources/PGroupWindow.cpp
   trunk/Sources/PGroupWindow.h
   trunk/Sources/PMessageWindow.cpp
   trunk/Sources/PProjectWindow.cpp
   trunk/Sources/PProjectWindow.h
Log:
- refactored CDocWindow to be able to add support for automatically
  storing and restoring of default layouts per doc-window-type. Pe used
  to mix up group window sizes and normal windows sizes, which was a mess.



Modified: trunk/Sources/CDiffWindow.cpp
===================================================================
--- trunk/Sources/CDiffWindow.cpp	2005-12-27 22:31:20 UTC (rev 416)
+++ trunk/Sources/CDiffWindow.cpp	2006-01-13 18:02:46 UTC (rev 417)
@@ -652,9 +652,7 @@
 				FailOSErr(e1.GetRef(&f1));
 				FailOSErr(e2.GetRef(&f2));
 
-				BRect r = PDoc::NextPosition();
-				r.right = r.left + 400;
-				r.bottom = r.top + 150;
+				BRect r(100,100,500,250);
 						
 				CDiffWindow *ndw = new CDiffWindow(r, "Differences");
 				

Modified: trunk/Sources/CDocWindow.cpp
===================================================================
--- trunk/Sources/CDocWindow.cpp	2005-12-27 22:31:20 UTC (rev 416)
+++ trunk/Sources/CDocWindow.cpp	2006-01-13 18:02:46 UTC (rev 417)
@@ -37,6 +37,7 @@
 
 #include <NodeMonitor.h>
 #include <fs_attr.h>
+#include <String.h>
 
 #include "CDocIO.h"
 #include "CDocWindow.h"
@@ -51,7 +52,7 @@
 int CDocWindow::sfNewCount = -1;
 
 CDocWindow::CDocWindow(const entry_ref *doc)
-	: BWindow(NextPosition(), "Untitled", B_DOCUMENT_WINDOW, 0)
+	: BWindow(BRect(0,0,0,0), "Untitled", B_DOCUMENT_WINDOW, 0)
 	, CDoc("", this, doc)
 	, fWaitForSave(false)
 {
@@ -60,7 +61,7 @@
 }
 
 CDocWindow::CDocWindow(URLData& url)
-	: BWindow(NextPosition(), "Untitled", B_DOCUMENT_WINDOW, 0)
+	: BWindow(BRect(0,0,0,0), "Untitled", B_DOCUMENT_WINDOW, 0)
 	, CDoc(url)
 	, fWaitForSave(false)
 {
@@ -74,14 +75,6 @@
 		(*i)->Lock();
 		(*i)->Quit();
 	}
-
-	if (fDocIO->LastSaved() == 0)
-	{
-		// closing a new (unsaved) document (a.k.a. 'Untitled') defines
-		// the default document frame:
-		gPrefs->SetPrefRect(prf_R_DefaultDocumentRect, Frame());
-		sfNewCount = -1;
-	}
 }
 
 #pragma mark - settings
@@ -182,9 +175,25 @@
 void CDocWindow::Quit()
 {
 	WriteState();
+	if (fDocIO->LastSaved() == 0)
+	{
+		// closing a new (unsaved) document (a.k.a. 'Untitled') defines
+		// the default document frame for the current window type:
+		BString prefsName = prf_R_DefaultDocumentRect;
+			prefsName << DocWindowType();
+		gPrefs->SetPrefRect(prefsName.String(), Frame());
+		sfNewCount = -1;
+	}
 	inherited::Quit();
 }
 
+void CDocWindow::SetupSizeAndLayout()
+{
+	BRect winRect = NextPosition();
+	MoveTo(winRect.LeftTop());
+	ResizeTo(winRect.Width(), winRect.Height());
+}
+
 void CDocWindow::Show()
 {
 	// try to avoid showing window-parts offscreen:
@@ -319,8 +328,10 @@
 		40 + 80*textFont.StringWidth("m") + B_V_SCROLL_BAR_WIDTH + 5, 
 		25 + 40*lh + B_H_SCROLL_BAR_HEIGHT
 	);
-	BRect defaultFrame = gPrefs->GetPrefRect(prf_R_DefaultDocumentRect, 
-											 initialDefaultRect);
+	BString prefsName = prf_R_DefaultDocumentRect;
+		prefsName << DocWindowType();
+	BRect defaultFrame 
+		= gPrefs->GetPrefRect(prefsName.String(), initialDefaultRect);
 
 	if (inc)
 		sfNewCount++;

Modified: trunk/Sources/CDocWindow.h
===================================================================
--- trunk/Sources/CDocWindow.h	2005-12-27 22:31:20 UTC (rev 416)
+++ trunk/Sources/CDocWindow.h	2006-01-13 18:02:46 UTC (rev 417)
@@ -46,12 +46,15 @@
 			CDocWindow(URLData& url);
 virtual		~CDocWindow();
 		
+virtual		void SetupSizeAndLayout();
+virtual		const char* DocWindowType() = 0;
+
 virtual		void Show();
 virtual		bool QuitRequested();
 virtual		void Quit();
 virtual 	void MessageReceived(BMessage *msg);
 
-static		BRect NextPosition(bool inc = true);
+			BRect NextPosition(bool inc = true);
 
 			void AddDialog(HDialog *dlog, bool isModal);
 			void RemoveDialog(HDialog *dlog);
@@ -74,6 +77,7 @@
 
 			BRect fLastStoredFrame;
 			BRect fInitialFrame;
+protected:
 static		int sfNewCount;
 };
 

Modified: trunk/Sources/PApp.cpp
===================================================================
--- trunk/Sources/PApp.cpp	2005-12-27 22:31:20 UTC (rev 416)
+++ trunk/Sources/PApp.cpp	2006-01-13 18:02:46 UTC (rev 417)
@@ -794,10 +794,7 @@
 			
 			case msg_FindDifferences:
 			{
-				BRect r = PDoc::NextPosition();
-				r.right = r.left + 400;
-				r.bottom = r.top + 150;
-				
+				BRect r(100,100,500,250);
 				new CDiffWindow(r, "Differences");
 				break;
 			}

Modified: trunk/Sources/PDoc.cpp
===================================================================
--- trunk/Sources/PDoc.cpp	2005-12-27 22:31:20 UTC (rev 416)
+++ trunk/Sources/PDoc.cpp	2006-01-13 18:02:46 UTC (rev 417)
@@ -85,6 +85,7 @@
 PDoc::PDoc(const entry_ref *doc, bool show)
 	: inherited(doc)
 {
+	SetupSizeAndLayout();
 	fShortcut = atomic_add(&sDocCount, 1);
 	fIsWorksheet = false;
 	fWindowMenuLength = -1;
@@ -123,6 +124,7 @@
 PDoc::PDoc(URLData& url)
 	: inherited(url)
 {
+	SetupSizeAndLayout();
 	fShortcut = atomic_add(&sDocCount, 1);
 	fIsWorksheet = false;
 	fWindowMenuLength = -1;
@@ -155,6 +157,12 @@
 {
 } /* PDoc::~PDoc */
 
+const char* PDoc::DocWindowType()
+{
+	return "";	
+		// default window type
+}
+
 bool PDoc::QuitRequested()
 {
 	bool result = inherited::QuitRequested();

Modified: trunk/Sources/PDoc.h
===================================================================
--- trunk/Sources/PDoc.h	2005-12-27 22:31:20 UTC (rev 416)
+++ trunk/Sources/PDoc.h	2006-01-13 18:02:46 UTC (rev 417)
@@ -66,6 +66,8 @@
 			PDoc(URLData& url);
 virtual		~PDoc();
 		
+virtual		const char* DocWindowType();
+
 virtual		void MessageReceived(BMessage *msg);
 virtual		bool QuitRequested();
 

Modified: trunk/Sources/PErrorWindow.cpp
===================================================================
--- trunk/Sources/PErrorWindow.cpp	2005-12-27 22:31:20 UTC (rev 416)
+++ trunk/Sources/PErrorWindow.cpp	2006-01-13 18:02:46 UTC (rev 417)
@@ -278,7 +278,7 @@
 } /* CReadStdErr::Execute */
 
 PErrorWindow::PErrorWindow(int *fd, const char *cwd)
-	: BWindow(PDoc::NextPosition(), "stderr", B_DOCUMENT_WINDOW, 0)
+	: BWindow(BRect(100,100,100,100), "stderr", B_DOCUMENT_WINDOW, 0)
 {
 	ResizeTo(400, 150);
 	

Modified: trunk/Sources/PGroupWindow.cpp
===================================================================
--- trunk/Sources/PGroupWindow.cpp	2005-12-27 22:31:20 UTC (rev 416)
+++ trunk/Sources/PGroupWindow.cpp	2006-01-13 18:02:46 UTC (rev 417)
@@ -36,6 +36,7 @@
 #include <fs_attr.h>
 #include <String.h>
 
+#include "CDocIO.h"
 #include "HAppResFile.h"
 #include "HButtonBar.h"
 #include "HDefines.h"
@@ -43,7 +44,6 @@
 #include "HPreferences.h"
 #include "MThread.h"
 #include "PApp.h"
-//#include "PDoc.h"
 #include "PGroupWindow.h"
 #include "PKeyDownFilter.h"
 #include "PMessages.h"
@@ -119,6 +119,38 @@
 	, fNewItems(NULL)
 {
 	SetMimeType("text/x-vnd.Hekkel-Pe-Group", false);
+	SetupSizeAndLayout();
+	if (doc)
+	{
+		SetTitle(doc->name);
+		
+		BEntry e;
+		FailOSErr(e.SetTo(doc));
+		BPath p;
+		FailOSErr(e.GetPath(&p));
+		fStatus->SetPath(p.Path());
+		AddRecent(p.Path());
+		
+		Read();
+	}
+	
+	fList->AddFilter(new PKeyDownFilter());
+	fList->MakeFocus();
+	Show();
+}
+
+PGroupWindow::~PGroupWindow()
+{
+	if (fPanel)
+	{
+		delete fPanel;
+		fPanel = NULL;
+	}
+} /* PGroupWindow::~PGroupWindow */
+
+void PGroupWindow::SetupSizeAndLayout()
+{
+	inherited::SetupSizeAndLayout();
 	SetFlags(Flags()|B_WILL_ACCEPT_FIRST_CLICK);
 	
 	ResizeTo(180, 400);
@@ -143,7 +175,8 @@
 	r = Bounds();
 	r.top = r.bottom - B_H_SCROLL_BAR_HEIGHT + 1;
 	r.right -= B_V_SCROLL_BAR_WIDTH;
-	AddChild(fStatus = new PGroupStatus(r, doc ? doc->name : NULL));
+	AddChild(fStatus 
+		= new PGroupStatus(r, fDocIO->EntryRef() ? fDocIO->EntryRef()->name : NULL));
 
 	r = Bounds();
 	r.top = fToolBar->Frame().bottom;
@@ -157,33 +190,12 @@
 	
 	AddShortcut('S', 0, new BMessage(msg_Save));
 	
-	if (doc)
-	{
-		SetTitle(doc->name);
-		
-		BEntry e;
-		FailOSErr(e.SetTo(doc));
-		BPath p;
-		FailOSErr(e.GetPath(&p));
-		fStatus->SetPath(p.Path());
-		AddRecent(p.Path());
-		
-		Read();
-	}
-	
-	fList->AddFilter(new PKeyDownFilter());
-	fList->MakeFocus();
-	Show();
 } /* PGroupWindow::PGroupWindow */
 
-PGroupWindow::~PGroupWindow()
+const char* PGroupWindow::DocWindowType()
 {
-	if (fPanel)
-	{
-		delete fPanel;
-		fPanel = NULL;
-	}
-} /* PGroupWindow::~PGroupWindow */
+	return "-group-window";
+}
 
 bool PGroupWindow::QuitRequested()
 {

Modified: trunk/Sources/PGroupWindow.h
===================================================================
--- trunk/Sources/PGroupWindow.h	2005-12-27 22:31:20 UTC (rev 416)
+++ trunk/Sources/PGroupWindow.h	2006-01-13 18:02:46 UTC (rev 417)
@@ -55,6 +55,9 @@
 			PGroupWindow(const entry_ref *doc = NULL);
 			~PGroupWindow();
 
+virtual	void SetupSizeAndLayout();
+virtual	const char* DocWindowType();
+
 virtual	bool QuitRequested();
 
 virtual	void MessageReceived(BMessage *msg);

Modified: trunk/Sources/PMessageWindow.cpp
===================================================================
--- trunk/Sources/PMessageWindow.cpp	2005-12-27 22:31:20 UTC (rev 416)
+++ trunk/Sources/PMessageWindow.cpp	2006-01-13 18:02:46 UTC (rev 417)
@@ -284,7 +284,7 @@
 const ulong msg_MsgInvoked = 'MsgI';
 
 PMessageWindow::PMessageWindow(const char *title)
-	: BWindow(PDoc::NextPosition(), title, B_DOCUMENT_WINDOW, 0)
+	: BWindow(BRect(100,100,100,100), title, B_DOCUMENT_WINDOW, 0)
 {
 	ResizeTo(400, 150);
 	

Modified: trunk/Sources/PProjectWindow.cpp
===================================================================
--- trunk/Sources/PProjectWindow.cpp	2005-12-27 22:31:20 UTC (rev 416)
+++ trunk/Sources/PProjectWindow.cpp	2006-01-13 18:02:46 UTC (rev 417)
@@ -39,6 +39,7 @@
 
 #include <fs_attr.h>
 
+#include "CDocIO.h"
 #include "CProjectJamFile.h"
 #include "CProjectMakeFile.h"
 #include "CProjectRoster.h"
@@ -78,6 +79,23 @@
 	, fPanel(NULL)
 {
 	SetMimeType(mimetype, false);
+	SetupSizeAndLayout();
+} /* PProjectWindow::PProjectWindow */
+
+PProjectWindow::~PProjectWindow()
+{
+	delete fPrjFile;
+	if (fPanel)
+	{
+		delete fPanel;
+		fPanel = NULL;
+	}
+	
+} /* PProjectWindow::~PProjectWindow */
+
+void PProjectWindow::SetupSizeAndLayout()
+{
+	inherited::SetupSizeAndLayout();
 	ResizeTo(180, 400);
 	SetSizeLimits(100, 100000, 100, 100000);
 	
@@ -100,7 +118,8 @@
 	r = Bounds();
 	r.top = r.bottom - B_H_SCROLL_BAR_HEIGHT + 1;
 	r.right -= B_V_SCROLL_BAR_WIDTH;
-	AddChild(fStatus = new PGroupStatus(r, doc ? doc->name : NULL));
+	AddChild(fStatus 
+		= new PGroupStatus(r, fDocIO->EntryRef() ? fDocIO->EntryRef()->name : NULL));
 
 	r = Bounds();
 	r.top = fToolBar->Frame().bottom;
@@ -117,18 +136,12 @@
 
 	NameChanged();
 	SelectionChanged();
-} /* PProjectWindow::PProjectWindow */
+}
 
-PProjectWindow::~PProjectWindow()
+const char* PProjectWindow::DocWindowType()
 {
-	delete fPrjFile;
-	if (fPanel)
-	{
-		delete fPanel;
-		fPanel = NULL;
-	}
-	
-} /* PProjectWindow::~PProjectWindow */
+	return "-project-window";
+}
 
 bool PProjectWindow::QuitRequested()
 {

Modified: trunk/Sources/PProjectWindow.h
===================================================================
--- trunk/Sources/PProjectWindow.h	2005-12-27 22:31:20 UTC (rev 416)
+++ trunk/Sources/PProjectWindow.h	2006-01-13 18:02:46 UTC (rev 417)
@@ -61,6 +61,9 @@
 	static PProjectWindow* Create(const entry_ref *doc, const char* mimetype);
 	~PProjectWindow();
 
+	virtual void SetupSizeAndLayout();
+	virtual const char* DocWindowType();
+
 	virtual bool QuitRequested();
 
 	virtual void MessageReceived(BMessage *msg);



From zooey at berlios.de  Fri Jan 13 19:15:55 2006
From: zooey at berlios.de (zooey at BerliOS)
Date: Fri, 13 Jan 2006 19:15:55 +0100
Subject: [pe-commits]r418 - trunk/Sources
Message-ID: <200601131815.k0DIFtwI002337@sheep.berlios.de>

Author: zooey
Date: 2006-01-13 19:15:53 +0100 (Fri, 13 Jan 2006)
New Revision: 418
ViewCVS: http://svn.berlios.de/viewcvs/pe-editor?rev=418&view=rev

Modified:
   trunk/Sources/PGroupWindow.cpp
Log:
- fixed bug that passed unhandled messages to wrong superclass. That's precisely
  why I prefer the use of 'inherited' over explicit class names.


Modified: trunk/Sources/PGroupWindow.cpp
===================================================================
--- trunk/Sources/PGroupWindow.cpp	2006-01-13 18:02:46 UTC (rev 417)
+++ trunk/Sources/PGroupWindow.cpp	2006-01-13 18:15:53 UTC (rev 418)
@@ -245,7 +245,7 @@
 				break;
 			
 			default:
-				BWindow::MessageReceived(msg);
+				inherited::MessageReceived(msg);
 				break;
 		}
 } /* PGroupWindow::MessageReceived */



From zooey at berlios.de  Fri Jan 13 21:45:10 2006
From: zooey at berlios.de (zooey at BerliOS)
Date: Fri, 13 Jan 2006 21:45:10 +0100
Subject: [pe-commits]r419 - trunk/Sources
Message-ID: <200601132045.k0DKjA9f027076@sheep.berlios.de>

Author: zooey
Date: 2006-01-13 21:45:10 +0100 (Fri, 13 Jan 2006)
New Revision: 419
ViewCVS: http://svn.berlios.de/viewcvs/pe-editor?rev=419&view=rev

Modified:
   trunk/Sources/CFindDialog.cpp
Log:
- fixed crash when using CTRL-ARROW_DOWN to navigate to the next find pattern,
  but the find pattern list was empty.



Modified: trunk/Sources/CFindDialog.cpp
===================================================================
--- trunk/Sources/CFindDialog.cpp	2006-01-13 18:15:53 UTC (rev 418)
+++ trunk/Sources/CFindDialog.cpp	2006-01-13 20:45:10 UTC (rev 419)
@@ -141,7 +141,9 @@
 
 void CRecentPatternController::Next()
 {
-	if (fCurrIdx == fPatternVect.size()-1 && !fSavedPattern.IsEmpty())
+	if (fSavedPattern.IsEmpty())
+		return;
+	if (fCurrIdx == fPatternVect.size()-1)
 	{	// restore the saved pattern edited by user:
 		gFindDialog->SetPatternInfo(&fSavedPattern);
 	} 



From zooey at berlios.de  Fri Jan 13 22:03:37 2006
From: zooey at berlios.de (zooey at BerliOS)
Date: Fri, 13 Jan 2006 22:03:37 +0100
Subject: [pe-commits]r420 - trunk/Sources
Message-ID: <200601132103.k0DL3bZU029377@sheep.berlios.de>

Author: zooey
Date: 2006-01-13 22:03:37 +0100 (Fri, 13 Jan 2006)
New Revision: 420
ViewCVS: http://svn.berlios.de/viewcvs/pe-editor?rev=420&view=rev

Modified:
   trunk/Sources/CDocIO.cpp
Log:
- made VerifyFile() robust with respect to modification times that
  lie in the future. Running cvs against sourceforge was always triggering 
  *two* Reload alerts, which started to bug me.



Modified: trunk/Sources/CDocIO.cpp
===================================================================
--- trunk/Sources/CDocIO.cpp	2006-01-13 20:45:10 UTC (rev 419)
+++ trunk/Sources/CDocIO.cpp	2006-01-13 21:03:37 UTC (rev 420)
@@ -530,10 +530,12 @@
 				}
 			}
 
-			fLastSaved = time(NULL);
+			fLastSaved = max(fLastSaved, time(NULL));
 				// if more than one update request was issued
 				// in the mean time, only the first one is
 				// considered
+				// the max() takes care of mod-times in the future
+				// (cvs may cause that kind of thing). 
 		}
 	}
 	catch (HErr& e)



From zooey at berlios.de  Sat Jan 14 11:57:17 2006
From: zooey at berlios.de (zooey at BerliOS)
Date: Sat, 14 Jan 2006 11:57:17 +0100
Subject: [pe-commits]r421 - trunk/Sources
Message-ID: <200601141057.k0EAvHdq022703@sheep.berlios.de>

Author: zooey
Date: 2006-01-14 11:57:17 +0100 (Sat, 14 Jan 2006)
New Revision: 421
ViewCVS: http://svn.berlios.de/viewcvs/pe-editor?rev=421&view=rev

Modified:
   trunk/Sources/PCmd.cpp
Log:
- fixed crash when replacing something with nothing


Modified: trunk/Sources/PCmd.cpp
===================================================================
--- trunk/Sources/PCmd.cpp	2006-01-13 21:03:37 UTC (rev 420)
+++ trunk/Sources/PCmd.cpp	2006-01-14 10:57:17 UTC (rev 421)
@@ -551,11 +551,11 @@
 void PReplaceCmd::Do()
 {
 	fText->Delete(fOffset, fOffset + fSize);
-	if (*fWith)
+	if (fWith && *fWith)
 		fText->Insert(fWith, strlen(fWith), fOffset);
 
 	int offset = fOffset;
-	if (!fBackward)
+	if (!fBackward && fWith)
 		offset += strlen(fWith);
 	fText->SetCaret(offset);
 
@@ -577,7 +577,8 @@
 
 void PReplaceCmd::Undo()
 {
-	if (fWith && *fWith) fText->Delete(fOffset, fOffset + strlen(fWith));
+	if (fWith && *fWith) 
+		fText->Delete(fOffset, fOffset + strlen(fWith));
 	fText->Insert(fWhat, strlen(fWhat), fOffset);
 	Update();
 	fText->Select(fOffset, fOffset + strlen(fWhat), true, false);



From zooey at berlios.de  Sat Jan 14 12:40:37 2006
From: zooey at berlios.de (zooey at BerliOS)
Date: Sat, 14 Jan 2006 12:40:37 +0100
Subject: [pe-commits]r422 - trunk/Sources
Message-ID: <200601141140.k0EBebcd013446@sheep.berlios.de>

Author: zooey
Date: 2006-01-14 12:40:26 +0100 (Sat, 14 Jan 2006)
New Revision: 422
ViewCVS: http://svn.berlios.de/viewcvs/pe-editor?rev=422&view=rev

Modified:
   trunk/Sources/PCmd.cpp
   trunk/Sources/PText.cpp
   trunk/Sources/PText.h
Log:
- fixed a pretty bad bug that caused regex-based replaces on multiple files to
  replace the wrong amount of bytes. Instead of replacing the number of bytes
  that the regex matched on, it simply replaced the number of bytes the regex
  itself contained.
- PText::FindNext() now passes back the matched length on request.


Modified: trunk/Sources/PCmd.cpp
===================================================================
--- trunk/Sources/PCmd.cpp	2006-01-14 10:57:17 UTC (rev 421)
+++ trunk/Sources/PCmd.cpp	2006-01-14 11:40:26 UTC (rev 422)
@@ -618,18 +618,18 @@
 
 	int a, c;
 	
-	int fl, rl, offset = 0;
-	fl = strlen(fFind);
+	int rl, offset = 0;
 	rl = strlen(fRepl);
 		
 	PLongAction la(fText);
 		
 	BString what;
+	int matchLen = 0;
 	while (fText->FindNext(fFind, offset, fIgnoreCase,	false, false, 
-		fEntireWord, fGrep, false))
+		fEntireWord, fGrep, false, &matchLen))
 	{
-		what.SetTo(fText->Text() + offset, fl);
-		fText->Delete(offset, offset + fl);
+		what.SetTo(fText->Text() + offset, matchLen);
+		fText->Delete(offset, offset + matchLen);
 		if (fGrep)
 		{
 			char* repStr 

Modified: trunk/Sources/PText.cpp
===================================================================
--- trunk/Sources/PText.cpp	2006-01-14 10:57:17 UTC (rev 421)
+++ trunk/Sources/PText.cpp	2006-01-14 11:40:26 UTC (rev 422)
@@ -4023,7 +4023,7 @@
 } /* CCellView::CanReplace */
 
 bool PText::FindNext(const char *what, int& offset, bool ignoreCase,
-	bool wrap, bool backward, bool entireWord, bool regx, bool scroll)
+	bool wrap, bool backward, bool entireWord, bool regx, bool scroll, int* foundLen)
 {
 	int skip[256], wl = strlen((char *)what);
 	bool wrapped = false;
@@ -4113,6 +4113,9 @@
 					fAnchor = offset;
 					fCaret = offset + wl;
 				}
+				if (foundLen)
+					// fill in the length of the match:
+					*foundLen = wl;
 				return true;
 			}
 		}

Modified: trunk/Sources/PText.h
===================================================================
--- trunk/Sources/PText.h	2006-01-14 10:57:17 UTC (rev 421)
+++ trunk/Sources/PText.h	2006-01-14 11:40:26 UTC (rev 422)
@@ -234,7 +234,7 @@
 			bool CanReplace(const char *s, bool ignoreCase, bool regx);
 			bool FindNext(const char *what, int& offset, bool ignoreCase,
 					bool wrap, bool backward, bool entireWord, bool regx,
-					bool scroll = true);
+					bool scroll = true, int* foundLen = NULL);
 			bool IsIncSearching() const;
 			void DoIncSearch(bool forward);
 			void IncSearchKey(const char *bytes, int numBytes);



From zooey at berlios.de  Sat Jan 14 13:21:10 2006
From: zooey at berlios.de (zooey at BerliOS)
Date: Sat, 14 Jan 2006 13:21:10 +0100
Subject: [pe-commits]r423 - trunk/Sources
Message-ID: <200601141221.k0ECLARt013239@sheep.berlios.de>

Author: zooey
Date: 2006-01-14 13:21:08 +0100 (Sat, 14 Jan 2006)
New Revision: 423
ViewCVS: http://svn.berlios.de/viewcvs/pe-editor?rev=423&view=rev

Modified:
   trunk/Sources/PGroupWindow.cpp
Log:
- applied patch by Marcus Overhagen that fixes reading of groups.


Modified: trunk/Sources/PGroupWindow.cpp
===================================================================
--- trunk/Sources/PGroupWindow.cpp	2006-01-14 11:40:26 UTC (rev 422)
+++ trunk/Sources/PGroupWindow.cpp	2006-01-14 12:21:08 UTC (rev 423)
@@ -257,7 +257,7 @@
 		if (docText.Compare("### pe Group File\n", 18) != 0)
 			THROW(("Not a group file!"));
 		
-		if (EntryRef())
+		if (!EntryRef())
 			THROW(("Can only read local groups"));
 
 		node_ref nref;



From zooey at berlios.de  Sat Jan 14 13:57:29 2006
From: zooey at berlios.de (zooey at BerliOS)
Date: Sat, 14 Jan 2006 13:57:29 +0100
Subject: [pe-commits]r424 - trunk/Sources
Message-ID: <200601141257.k0ECvTPc001999@sheep.berlios.de>

Author: zooey
Date: 2006-01-14 13:57:05 +0100 (Sat, 14 Jan 2006)
New Revision: 424
ViewCVS: http://svn.berlios.de/viewcvs/pe-editor?rev=424&view=rev

Modified:
   trunk/Sources/CDocWindow.cpp
Log:
- name the window properly upon creation, so that the underlying ports
  have a name corresponding to the window. Makes debugging a bit easier.
- use B_ASYNCHRONOUS_CONTROLS when creating windows.


Modified: trunk/Sources/CDocWindow.cpp
===================================================================
--- trunk/Sources/CDocWindow.cpp	2006-01-14 12:21:08 UTC (rev 423)
+++ trunk/Sources/CDocWindow.cpp	2006-01-14 12:57:05 UTC (rev 424)
@@ -52,7 +52,8 @@
 int CDocWindow::sfNewCount = -1;
 
 CDocWindow::CDocWindow(const entry_ref *doc)
-	: BWindow(BRect(0,0,0,0), "Untitled", B_DOCUMENT_WINDOW, 0)
+	: BWindow(BRect(0,0,0,0), doc ? doc->name : "Untitled", B_DOCUMENT_WINDOW, 
+				 B_ASYNCHRONOUS_CONTROLS)
 	, CDoc("", this, doc)
 	, fWaitForSave(false)
 {
@@ -61,7 +62,7 @@
 }
 
 CDocWindow::CDocWindow(URLData& url)
-	: BWindow(BRect(0,0,0,0), "Untitled", B_DOCUMENT_WINDOW, 0)
+	: BWindow(BRect(0,0,0,0), url.File(), B_DOCUMENT_WINDOW, B_ASYNCHRONOUS_CONTROLS)
 	, CDoc(url)
 	, fWaitForSave(false)
 {
@@ -69,6 +70,7 @@
 
 CDocWindow::~CDocWindow()
 {
+printf("destroying %s\n",CDoc::Name());
 	vector<HDialog*>::iterator i;
 	for (i = fDialogs.begin(); i != fDialogs.end(); i++)
 	{
@@ -134,7 +136,7 @@
 
 bool CDocWindow::QuitRequested()
 {
-	bool result = true;
+	bool result = inherited::QuitRequested();
 	fWaitForSave = false;
 
 	if (IsDirty())



From zooey at berlios.de  Sat Jan 14 15:03:42 2006
From: zooey at berlios.de (zooey at BerliOS)
Date: Sat, 14 Jan 2006 15:03:42 +0100
Subject: [pe-commits]r425 - trunk/Sources
Message-ID: <200601141403.k0EE3g3a001554@sheep.berlios.de>

Author: zooey
Date: 2006-01-14 15:03:39 +0100 (Sat, 14 Jan 2006)
New Revision: 425
ViewCVS: http://svn.berlios.de/viewcvs/pe-editor?rev=425&view=rev

Modified:
   trunk/Sources/CDocWindow.cpp
Log:
- removed debug output

Modified: trunk/Sources/CDocWindow.cpp
===================================================================
--- trunk/Sources/CDocWindow.cpp	2006-01-14 12:57:05 UTC (rev 424)
+++ trunk/Sources/CDocWindow.cpp	2006-01-14 14:03:39 UTC (rev 425)
@@ -70,7 +70,6 @@
 
 CDocWindow::~CDocWindow()
 {
-printf("destroying %s\n",CDoc::Name());
 	vector<HDialog*>::iterator i;
 	for (i = fDialogs.begin(); i != fDialogs.end(); i++)
 	{



From zooey at berlios.de  Sat Jan 14 22:08:17 2006
From: zooey at berlios.de (zooey at BerliOS)
Date: Sat, 14 Jan 2006 22:08:17 +0100
Subject: [pe-commits]r426 - trunk/Sources
Message-ID: <200601142108.k0EL8Hec014023@sheep.berlios.de>

Author: zooey
Date: 2006-01-14 22:08:17 +0100 (Sat, 14 Jan 2006)
New Revision: 426
ViewCVS: http://svn.berlios.de/viewcvs/pe-editor?rev=426&view=rev

Modified:
   trunk/Sources/PText.cpp
Log:
- fixed leaking of drawing bitmap, this was the spurious window-like thingy
  named 'bm'. Multi-file searches and replaces should work more reliably now.


Modified: trunk/Sources/PText.cpp
===================================================================
--- trunk/Sources/PText.cpp	2006-01-14 14:03:39 UTC (rev 425)
+++ trunk/Sources/PText.cpp	2006-01-14 21:08:17 UTC (rev 426)
@@ -271,6 +271,7 @@
 
 	free(fCWD);
 	delete fMainPopUp;
+	delete fLineMap;
 } /* PText::~PText */
 
 void PText::SetDefaultLanguageByExtension(const char *extension)



From zooey at berlios.de  Sun Jan 15 13:35:47 2006
From: zooey at berlios.de (zooey at BerliOS)
Date: Sun, 15 Jan 2006 13:35:47 +0100
Subject: [pe-commits]r427 - trunk/Sources
Message-ID: <200601151235.k0FCZlJs022566@sheep.berlios.de>

Author: zooey
Date: 2006-01-15 13:35:44 +0100 (Sun, 15 Jan 2006)
New Revision: 427
ViewCVS: http://svn.berlios.de/viewcvs/pe-editor?rev=427&view=rev

Modified:
   trunk/Sources/CDocWindow.cpp
   trunk/Sources/CDocWindow.h
   trunk/Sources/PApp.cpp
   trunk/Sources/PApp.h
   trunk/Sources/PDoc.cpp
   trunk/Sources/PGroupWindow.cpp
   trunk/Sources/PProjectWindow.cpp
   trunk/Sources/PProjectWindow.h
Log:
- applied Marcus Overhagen's patch that:
  + fixes problems when closing dirty windows
  + lets group windows always show their  name in title (as opposed to full path)



Modified: trunk/Sources/CDocWindow.cpp
===================================================================
--- trunk/Sources/CDocWindow.cpp	2006-01-14 21:08:17 UTC (rev 426)
+++ trunk/Sources/CDocWindow.cpp	2006-01-15 12:35:44 UTC (rev 427)
@@ -52,19 +52,22 @@
 int CDocWindow::sfNewCount = -1;
 
 CDocWindow::CDocWindow(const entry_ref *doc)
-	: BWindow(BRect(0,0,0,0), doc ? doc->name : "Untitled", B_DOCUMENT_WINDOW, 
-				 B_ASYNCHRONOUS_CONTROLS)
-	, CDoc("", this, doc)
-	, fWaitForSave(false)
+	: inheritedWindow(BRect(0,0,0,0), doc ? doc->name : "Untitled", B_DOCUMENT_WINDOW, 
+				 			B_ASYNCHRONOUS_CONTROLS)
+	, inheritedDoc("", this, doc)
+	, fCloseWinAfterSave(false)
+	, fCloseAppAfterSave(false)
 {
 	if (doc)
 		StartWatchingFile();
 }
 
 CDocWindow::CDocWindow(URLData& url)
-	: BWindow(BRect(0,0,0,0), url.File(), B_DOCUMENT_WINDOW, B_ASYNCHRONOUS_CONTROLS)
-	, CDoc(url)
-	, fWaitForSave(false)
+	: inheritedWindow(BRect(0,0,0,0), url.File(), B_DOCUMENT_WINDOW, 
+							B_ASYNCHRONOUS_CONTROLS)
+	, inheritedDoc(url)
+	, fCloseWinAfterSave(false)
+	, fCloseAppAfterSave(false)
 {
 }
 
@@ -135,13 +138,15 @@
 
 bool CDocWindow::QuitRequested()
 {
-	bool result = inherited::QuitRequested();
-	fWaitForSave = false;
+	bool result = true;
 
+	fCloseWinAfterSave = false;
+	fCloseAppAfterSave = false;
+
 	if (IsDirty())
 	{
 		char title[256];
-		sprintf(title, "Save changes to '%s' before closing?", CDoc::Name());
+		sprintf(title, "Save changes to '%s' before closing?", inheritedDoc::Name());
 		
 		MInfoAlert alert(title, "Save", "Cancel", "Don't save");
 		
@@ -163,7 +168,8 @@
 				else
 				{
 					result = false;
-					fWaitForSave = true;
+                                       fCloseWinAfterSave = true;
+                                       fCloseAppAfterSave = gApp->IsQuitting();
 					SaveAs();
 				}
 				break;
@@ -185,7 +191,7 @@
 		gPrefs->SetPrefRect(prefsName.String(), Frame());
 		sfNewCount = -1;
 	}
-	inherited::Quit();
+	inheritedWindow::Quit();
 }
 
 void CDocWindow::SetupSizeAndLayout()
@@ -205,7 +211,7 @@
 	newFrame.top = MAX(20.0, MIN(sr.Height()-newFrame.Height()-5, newFrame.top));
 	MoveTo(newFrame.LeftTop());
 
-	BWindow::Show();
+	inheritedWindow::Show();
 	fInitialFrame = Frame();
 }
 
@@ -277,7 +283,7 @@
 			
 			default:
 			{
-				BWindow::MessageReceived(msg);
+				inheritedWindow::MessageReceived(msg);
 			}
 		}
 	}
@@ -287,6 +293,19 @@
 	}
 }
 
+void CDocWindow::SetDirty(bool dirty)
+{
+	inheritedDoc::SetDirty(dirty);
+	
+	if (!dirty && fCloseWinAfterSave) {
+		if (fCloseAppAfterSave) {
+			gApp->PostMessage(B_QUIT_REQUESTED);
+		} else {
+			PostMessage(B_QUIT_REQUESTED);
+		}
+	}
+}
+
 void CDocWindow::NameChanged()
 {
 	if (EntryRef())
@@ -312,7 +331,7 @@
 		SetTitle(title);
 	}
 	else
-		SetTitle(CDoc::Name());
+		SetTitle(inheritedDoc::Name());
 }
 
 BRect CDocWindow::NextPosition(bool inc)

Modified: trunk/Sources/CDocWindow.h
===================================================================
--- trunk/Sources/CDocWindow.h	2006-01-14 21:08:17 UTC (rev 426)
+++ trunk/Sources/CDocWindow.h	2006-01-15 12:35:44 UTC (rev 427)
@@ -41,6 +41,9 @@
 
 class CDocWindow : public BWindow, public CDoc
 {
+            typedef BWindow inheritedWindow;
+            typedef CDoc inheritedDoc;
+
 public:
 			CDocWindow(const entry_ref *ref = NULL);
 			CDocWindow(URLData& url);
@@ -66,11 +69,13 @@
 virtual 	void ApplySettings(const BMessage& settingsMsg);
 			status_t WriteState();
 
+virtual                void SetDirty(bool dirty);
 virtual		void NameChanged();
 
 			vector<HDialog*> fDialogs;
 
-			bool fWaitForSave;
+            bool fCloseWinAfterSave;
+            bool fCloseAppAfterSave;
 
 private:
 			HDialog *fWindowModal;

Modified: trunk/Sources/PApp.cpp
===================================================================
--- trunk/Sources/PApp.cpp	2006-01-14 21:08:17 UTC (rev 426)
+++ trunk/Sources/PApp.cpp	2006-01-15 12:35:44 UTC (rev 427)
@@ -45,7 +45,6 @@
 #include "Utils.h"
 #include "PGroupWindow.h"
 #include "CGlossary.h"
-//#include "CKeywords.h"
 #include "CLangIntf.h"
 #include "HColorUtils.h"
 #include "PGlossyWindow.h"
@@ -280,6 +279,8 @@
 		InitSelectedMap();
 
 		CLangIntf::SetupLanguageInterfaces();
+
+		fIsQuitting = false;
 	
 		fPrefsDialog = NULL;
 		CPrefOpener *prefOpener = new CPrefOpener;
@@ -328,6 +329,8 @@
 {
 	BWindow *doc;
 	
+	fIsQuitting = true;
+
 	while ((doc = dynamic_cast<BWindow*>(CDoc::FirstDoc())) != NULL)
 	{
 		doc->Lock();
@@ -336,6 +339,7 @@
 		else
 		{
 			doc->Unlock();
+			fIsQuitting = false;
 			return false;
 		}
 	}

Modified: trunk/Sources/PApp.h
===================================================================
--- trunk/Sources/PApp.h	2006-01-14 21:08:17 UTC (rev 426)
+++ trunk/Sources/PApp.h	2006-01-15 12:35:44 UTC (rev 427)
@@ -56,7 +56,7 @@
 			PDoc* NewWindow(URLData& url);
 			CDoc* OpenWindow(const entry_ref& doc, bool show = true);
 
-	virtual	void ReadyToRun();
+virtual	void ReadyToRun();
 
 virtual	void ArgvReceived(int32 argc, const char **argv, const char * cwd);
 virtual	void RefsReceived(BMessage *msg);
@@ -73,6 +73,8 @@
 	
 			HDialog* FindDialog();
 			HDialog* PrefsDialog();
+
+			bool IsQuitting();
 	
 private:
 
@@ -80,9 +82,10 @@
 						BMessage *specifier, int32 form, const char *property);
 
 			BFilePanel *fOpenPanel;
-	thread_id fPrefOpener;
+			thread_id fPrefOpener;
 			HDialog *fFindDialog;
 			HDialog *fPrefsDialog;
+			bool fIsQuitting;
 };
 
 extern BDirectory gAppDir, gCWD, gPrefsDir;
@@ -96,6 +99,10 @@
 	return fPrefsDialog;
 }
 
+inline bool PApp::IsQuitting() {
+       return fIsQuitting;
+}
+
 extern PApp *gApp;
 
 extern bool gAutoIndent, gSyntaxColoring, gBalance, gBlockCursor, gFlashCursor, gSmartBrace;

Modified: trunk/Sources/PDoc.cpp
===================================================================
--- trunk/Sources/PDoc.cpp	2006-01-14 21:08:17 UTC (rev 426)
+++ trunk/Sources/PDoc.cpp	2006-01-15 12:35:44 UTC (rev 427)
@@ -822,7 +822,7 @@
 
 void PDoc::SetDirty(bool dirty)
 {
-	CDoc::SetDirty(dirty);
+	inherited::SetDirty(dirty);
 	if (!dirty)
 		// if the new state is non-dirty, we propagate this info to the 
 		// undo-stack, such that the non-dirty state is updated accordingly:

Modified: trunk/Sources/PGroupWindow.cpp
===================================================================
--- trunk/Sources/PGroupWindow.cpp	2006-01-14 21:08:17 UTC (rev 426)
+++ trunk/Sources/PGroupWindow.cpp	2006-01-15 12:35:44 UTC (rev 427)
@@ -199,14 +199,17 @@
 
 bool PGroupWindow::QuitRequested()
 {
-	long l;
+	if (!inherited::QuitRequested())
+		return false;
+
 	if (fIconFinder)
 	{
+		status_t s;
 		fIconFinder->Cancel();
-		wait_for_thread(fIconFinder->Thread(), &l);
+		wait_for_thread(fIconFinder->Thread(), &s);
 	}
 
-	return inherited::QuitRequested();	
+	return true;
 } /* PGroupWindow::QuitRequested */
 
 void PGroupWindow::MessageReceived(BMessage *msg)
@@ -381,7 +384,6 @@
 
 void PGroupWindow::NameChanged()
 {
-	inherited::NameChanged();
 	if (EntryRef())
 	{
 		BEntry e;
@@ -389,6 +391,7 @@
 		FailOSErr(e.SetTo(EntryRef()));
 		FailOSErr(e.GetPath(&p));
 		fStatus->SetPath(p.Path());
+		SetTitle(EntryRef()->name);
 	}
 }
 

Modified: trunk/Sources/PProjectWindow.cpp
===================================================================
--- trunk/Sources/PProjectWindow.cpp	2006-01-14 21:08:17 UTC (rev 426)
+++ trunk/Sources/PProjectWindow.cpp	2006-01-15 12:35:44 UTC (rev 427)
@@ -143,22 +143,6 @@
 	return "-project-window";
 }
 
-bool PProjectWindow::QuitRequested()
-{
-	fWaitForSave = false;
-
-	if (IsDirty() && (fSavePanel == NULL || fSavePanel->IsShowing()))
-	{
-		if (!EntryRef())
-			fWaitForSave = true;
-		Save();
-	}
-	else
-		WriteState();
-	
-	return !fWaitForSave;
-} /* PProjectWindow::QuitRequested */
-
 void PProjectWindow::MessageReceived(BMessage *msg)
 {
 	if (msg->WasDropped() && msg->HasRef("refs"))

Modified: trunk/Sources/PProjectWindow.h
===================================================================
--- trunk/Sources/PProjectWindow.h	2006-01-14 21:08:17 UTC (rev 426)
+++ trunk/Sources/PProjectWindow.h	2006-01-15 12:35:44 UTC (rev 427)
@@ -64,8 +64,6 @@
 	virtual void SetupSizeAndLayout();
 	virtual const char* DocWindowType();
 
-	virtual bool QuitRequested();
-
 	virtual void MessageReceived(BMessage *msg);
 	virtual void SetDirty(bool dirty);
 	virtual void WindowActivated(bool active);



